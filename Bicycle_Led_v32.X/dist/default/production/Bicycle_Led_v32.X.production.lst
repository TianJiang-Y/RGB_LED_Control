

Microchip Technology PIC LITE Macro Assembler V1.41 build -162212810 
                                                                                               Wed Nov 14 09:59:43 2018

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	16LF1824
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	swtext1,local,class=CONST,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	swtext2,local,class=CONST,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	intentry,global,class=CODE,delta=2
    34                           	dabs	1,0x7E,2
    35  0000                     
    36                           ; Version 1.41
    37                           ; Generated 25/01/2017 GMT
    38                           ; 
    39                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution.
    53                           ; 
    54                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    55                           ;        software without specific prior written permission.
    56                           ; 
    57                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    58                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    59                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    60                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    61                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    62                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    63                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    64                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    65                           ; 
    66                           ; 
    67                           ; Code-generator required, PIC16LF1824 Definitions
    68                           ; 
    69                           ; SFR Addresses
    70  0000                     	;# 
    71  0001                     	;# 
    72  0002                     	;# 
    73  0003                     	;# 
    74  0004                     	;# 
    75  0005                     	;# 
    76  0006                     	;# 
    77  0007                     	;# 
    78  0008                     	;# 
    79  0009                     	;# 
    80  000A                     	;# 
    81  000B                     	;# 
    82  000C                     	;# 
    83  000E                     	;# 
    84  0011                     	;# 
    85  0012                     	;# 
    86  0013                     	;# 
    87  0015                     	;# 
    88  0016                     	;# 
    89  0016                     	;# 
    90  0017                     	;# 
    91  0018                     	;# 
    92  0019                     	;# 
    93  001A                     	;# 
    94  001B                     	;# 
    95  001C                     	;# 
    96  001E                     	;# 
    97  001F                     	;# 
    98  008C                     	;# 
    99  008E                     	;# 
   100  0091                     	;# 
   101  0092                     	;# 
   102  0093                     	;# 
   103  0095                     	;# 
   104  0096                     	;# 
   105  0097                     	;# 
   106  0098                     	;# 
   107  0099                     	;# 
   108  009A                     	;# 
   109  009B                     	;# 
   110  009B                     	;# 
   111  009C                     	;# 
   112  009D                     	;# 
   113  009E                     	;# 
   114  010C                     	;# 
   115  010E                     	;# 
   116  0111                     	;# 
   117  0112                     	;# 
   118  0113                     	;# 
   119  0114                     	;# 
   120  0115                     	;# 
   121  0116                     	;# 
   122  0117                     	;# 
   123  0118                     	;# 
   124  0119                     	;# 
   125  011A                     	;# 
   126  011B                     	;# 
   127  011D                     	;# 
   128  011E                     	;# 
   129  018C                     	;# 
   130  018E                     	;# 
   131  0191                     	;# 
   132  0191                     	;# 
   133  0192                     	;# 
   134  0193                     	;# 
   135  0193                     	;# 
   136  0193                     	;# 
   137  0194                     	;# 
   138  0195                     	;# 
   139  0196                     	;# 
   140  0199                     	;# 
   141  019A                     	;# 
   142  019B                     	;# 
   143  019B                     	;# 
   144  019B                     	;# 
   145  019B                     	;# 
   146  019C                     	;# 
   147  019C                     	;# 
   148  019D                     	;# 
   149  019E                     	;# 
   150  019F                     	;# 
   151  020C                     	;# 
   152  020E                     	;# 
   153  0211                     	;# 
   154  0211                     	;# 
   155  0212                     	;# 
   156  0212                     	;# 
   157  0213                     	;# 
   158  0213                     	;# 
   159  0214                     	;# 
   160  0214                     	;# 
   161  0215                     	;# 
   162  0215                     	;# 
   163  0215                     	;# 
   164  0215                     	;# 
   165  0216                     	;# 
   166  0216                     	;# 
   167  0217                     	;# 
   168  0217                     	;# 
   169  0291                     	;# 
   170  0291                     	;# 
   171  0292                     	;# 
   172  0293                     	;# 
   173  0294                     	;# 
   174  0295                     	;# 
   175  0295                     	;# 
   176  0296                     	;# 
   177  0298                     	;# 
   178  0298                     	;# 
   179  0299                     	;# 
   180  029A                     	;# 
   181  029B                     	;# 
   182  029C                     	;# 
   183  029D                     	;# 
   184  029E                     	;# 
   185  029E                     	;# 
   186  0311                     	;# 
   187  0311                     	;# 
   188  0312                     	;# 
   189  0313                     	;# 
   190  0318                     	;# 
   191  0318                     	;# 
   192  0319                     	;# 
   193  031A                     	;# 
   194  038C                     	;# 
   195  038E                     	;# 
   196  0391                     	;# 
   197  0392                     	;# 
   198  0393                     	;# 
   199  039A                     	;# 
   200  039C                     	;# 
   201  039D                     	;# 
   202  039E                     	;# 
   203  039F                     	;# 
   204  0415                     	;# 
   205  0416                     	;# 
   206  0417                     	;# 
   207  041C                     	;# 
   208  041D                     	;# 
   209  041E                     	;# 
   210  0FE4                     	;# 
   211  0FE5                     	;# 
   212  0FE6                     	;# 
   213  0FE7                     	;# 
   214  0FE8                     	;# 
   215  0FE9                     	;# 
   216  0FEA                     	;# 
   217  0FEB                     	;# 
   218  0FED                     	;# 
   219  0FEE                     	;# 
   220  0FEF                     	;# 
   221  0000                     	;# 
   222  0001                     	;# 
   223  0002                     	;# 
   224  0003                     	;# 
   225  0004                     	;# 
   226  0005                     	;# 
   227  0006                     	;# 
   228  0007                     	;# 
   229  0008                     	;# 
   230  0009                     	;# 
   231  000A                     	;# 
   232  000B                     	;# 
   233  000C                     	;# 
   234  000E                     	;# 
   235  0011                     	;# 
   236  0012                     	;# 
   237  0013                     	;# 
   238  0015                     	;# 
   239  0016                     	;# 
   240  0016                     	;# 
   241  0017                     	;# 
   242  0018                     	;# 
   243  0019                     	;# 
   244  001A                     	;# 
   245  001B                     	;# 
   246  001C                     	;# 
   247  001E                     	;# 
   248  001F                     	;# 
   249  008C                     	;# 
   250  008E                     	;# 
   251  0091                     	;# 
   252  0092                     	;# 
   253  0093                     	;# 
   254  0095                     	;# 
   255  0096                     	;# 
   256  0097                     	;# 
   257  0098                     	;# 
   258  0099                     	;# 
   259  009A                     	;# 
   260  009B                     	;# 
   261  009B                     	;# 
   262  009C                     	;# 
   263  009D                     	;# 
   264  009E                     	;# 
   265  010C                     	;# 
   266  010E                     	;# 
   267  0111                     	;# 
   268  0112                     	;# 
   269  0113                     	;# 
   270  0114                     	;# 
   271  0115                     	;# 
   272  0116                     	;# 
   273  0117                     	;# 
   274  0118                     	;# 
   275  0119                     	;# 
   276  011A                     	;# 
   277  011B                     	;# 
   278  011D                     	;# 
   279  011E                     	;# 
   280  018C                     	;# 
   281  018E                     	;# 
   282  0191                     	;# 
   283  0191                     	;# 
   284  0192                     	;# 
   285  0193                     	;# 
   286  0193                     	;# 
   287  0193                     	;# 
   288  0194                     	;# 
   289  0195                     	;# 
   290  0196                     	;# 
   291  0199                     	;# 
   292  019A                     	;# 
   293  019B                     	;# 
   294  019B                     	;# 
   295  019B                     	;# 
   296  019B                     	;# 
   297  019C                     	;# 
   298  019C                     	;# 
   299  019D                     	;# 
   300  019E                     	;# 
   301  019F                     	;# 
   302  020C                     	;# 
   303  020E                     	;# 
   304  0211                     	;# 
   305  0211                     	;# 
   306  0212                     	;# 
   307  0212                     	;# 
   308  0213                     	;# 
   309  0213                     	;# 
   310  0214                     	;# 
   311  0214                     	;# 
   312  0215                     	;# 
   313  0215                     	;# 
   314  0215                     	;# 
   315  0215                     	;# 
   316  0216                     	;# 
   317  0216                     	;# 
   318  0217                     	;# 
   319  0217                     	;# 
   320  0291                     	;# 
   321  0291                     	;# 
   322  0292                     	;# 
   323  0293                     	;# 
   324  0294                     	;# 
   325  0295                     	;# 
   326  0295                     	;# 
   327  0296                     	;# 
   328  0298                     	;# 
   329  0298                     	;# 
   330  0299                     	;# 
   331  029A                     	;# 
   332  029B                     	;# 
   333  029C                     	;# 
   334  029D                     	;# 
   335  029E                     	;# 
   336  029E                     	;# 
   337  0311                     	;# 
   338  0311                     	;# 
   339  0312                     	;# 
   340  0313                     	;# 
   341  0318                     	;# 
   342  0318                     	;# 
   343  0319                     	;# 
   344  031A                     	;# 
   345  038C                     	;# 
   346  038E                     	;# 
   347  0391                     	;# 
   348  0392                     	;# 
   349  0393                     	;# 
   350  039A                     	;# 
   351  039C                     	;# 
   352  039D                     	;# 
   353  039E                     	;# 
   354  039F                     	;# 
   355  0415                     	;# 
   356  0416                     	;# 
   357  0417                     	;# 
   358  041C                     	;# 
   359  041D                     	;# 
   360  041E                     	;# 
   361  0FE4                     	;# 
   362  0FE5                     	;# 
   363  0FE6                     	;# 
   364  0FE7                     	;# 
   365  0FE8                     	;# 
   366  0FE9                     	;# 
   367  0FEA                     	;# 
   368  0FEB                     	;# 
   369  0FED                     	;# 
   370  0FEE                     	;# 
   371  0FEF                     	;# 
   372  0000                     	;# 
   373  0001                     	;# 
   374  0002                     	;# 
   375  0003                     	;# 
   376  0004                     	;# 
   377  0005                     	;# 
   378  0006                     	;# 
   379  0007                     	;# 
   380  0008                     	;# 
   381  0009                     	;# 
   382  000A                     	;# 
   383  000B                     	;# 
   384  000C                     	;# 
   385  000E                     	;# 
   386  0011                     	;# 
   387  0012                     	;# 
   388  0013                     	;# 
   389  0015                     	;# 
   390  0016                     	;# 
   391  0016                     	;# 
   392  0017                     	;# 
   393  0018                     	;# 
   394  0019                     	;# 
   395  001A                     	;# 
   396  001B                     	;# 
   397  001C                     	;# 
   398  001E                     	;# 
   399  001F                     	;# 
   400  008C                     	;# 
   401  008E                     	;# 
   402  0091                     	;# 
   403  0092                     	;# 
   404  0093                     	;# 
   405  0095                     	;# 
   406  0096                     	;# 
   407  0097                     	;# 
   408  0098                     	;# 
   409  0099                     	;# 
   410  009A                     	;# 
   411  009B                     	;# 
   412  009B                     	;# 
   413  009C                     	;# 
   414  009D                     	;# 
   415  009E                     	;# 
   416  010C                     	;# 
   417  010E                     	;# 
   418  0111                     	;# 
   419  0112                     	;# 
   420  0113                     	;# 
   421  0114                     	;# 
   422  0115                     	;# 
   423  0116                     	;# 
   424  0117                     	;# 
   425  0118                     	;# 
   426  0119                     	;# 
   427  011A                     	;# 
   428  011B                     	;# 
   429  011D                     	;# 
   430  011E                     	;# 
   431  018C                     	;# 
   432  018E                     	;# 
   433  0191                     	;# 
   434  0191                     	;# 
   435  0192                     	;# 
   436  0193                     	;# 
   437  0193                     	;# 
   438  0193                     	;# 
   439  0194                     	;# 
   440  0195                     	;# 
   441  0196                     	;# 
   442  0199                     	;# 
   443  019A                     	;# 
   444  019B                     	;# 
   445  019B                     	;# 
   446  019B                     	;# 
   447  019B                     	;# 
   448  019C                     	;# 
   449  019C                     	;# 
   450  019D                     	;# 
   451  019E                     	;# 
   452  019F                     	;# 
   453  020C                     	;# 
   454  020E                     	;# 
   455  0211                     	;# 
   456  0211                     	;# 
   457  0212                     	;# 
   458  0212                     	;# 
   459  0213                     	;# 
   460  0213                     	;# 
   461  0214                     	;# 
   462  0214                     	;# 
   463  0215                     	;# 
   464  0215                     	;# 
   465  0215                     	;# 
   466  0215                     	;# 
   467  0216                     	;# 
   468  0216                     	;# 
   469  0217                     	;# 
   470  0217                     	;# 
   471  0291                     	;# 
   472  0291                     	;# 
   473  0292                     	;# 
   474  0293                     	;# 
   475  0294                     	;# 
   476  0295                     	;# 
   477  0295                     	;# 
   478  0296                     	;# 
   479  0298                     	;# 
   480  0298                     	;# 
   481  0299                     	;# 
   482  029A                     	;# 
   483  029B                     	;# 
   484  029C                     	;# 
   485  029D                     	;# 
   486  029E                     	;# 
   487  029E                     	;# 
   488  0311                     	;# 
   489  0311                     	;# 
   490  0312                     	;# 
   491  0313                     	;# 
   492  0318                     	;# 
   493  0318                     	;# 
   494  0319                     	;# 
   495  031A                     	;# 
   496  038C                     	;# 
   497  038E                     	;# 
   498  0391                     	;# 
   499  0392                     	;# 
   500  0393                     	;# 
   501  039A                     	;# 
   502  039C                     	;# 
   503  039D                     	;# 
   504  039E                     	;# 
   505  039F                     	;# 
   506  0415                     	;# 
   507  0416                     	;# 
   508  0417                     	;# 
   509  041C                     	;# 
   510  041D                     	;# 
   511  041E                     	;# 
   512  0FE4                     	;# 
   513  0FE5                     	;# 
   514  0FE6                     	;# 
   515  0FE7                     	;# 
   516  0FE8                     	;# 
   517  0FE9                     	;# 
   518  0FEA                     	;# 
   519  0FEB                     	;# 
   520  0FED                     	;# 
   521  0FEE                     	;# 
   522  0FEF                     	;# 
   523  0000                     	;# 
   524  0001                     	;# 
   525  0002                     	;# 
   526  0003                     	;# 
   527  0004                     	;# 
   528  0005                     	;# 
   529  0006                     	;# 
   530  0007                     	;# 
   531  0008                     	;# 
   532  0009                     	;# 
   533  000A                     	;# 
   534  000B                     	;# 
   535  000C                     	;# 
   536  000E                     	;# 
   537  0011                     	;# 
   538  0012                     	;# 
   539  0013                     	;# 
   540  0015                     	;# 
   541  0016                     	;# 
   542  0016                     	;# 
   543  0017                     	;# 
   544  0018                     	;# 
   545  0019                     	;# 
   546  001A                     	;# 
   547  001B                     	;# 
   548  001C                     	;# 
   549  001E                     	;# 
   550  001F                     	;# 
   551  008C                     	;# 
   552  008E                     	;# 
   553  0091                     	;# 
   554  0092                     	;# 
   555  0093                     	;# 
   556  0095                     	;# 
   557  0096                     	;# 
   558  0097                     	;# 
   559  0098                     	;# 
   560  0099                     	;# 
   561  009A                     	;# 
   562  009B                     	;# 
   563  009B                     	;# 
   564  009C                     	;# 
   565  009D                     	;# 
   566  009E                     	;# 
   567  010C                     	;# 
   568  010E                     	;# 
   569  0111                     	;# 
   570  0112                     	;# 
   571  0113                     	;# 
   572  0114                     	;# 
   573  0115                     	;# 
   574  0116                     	;# 
   575  0117                     	;# 
   576  0118                     	;# 
   577  0119                     	;# 
   578  011A                     	;# 
   579  011B                     	;# 
   580  011D                     	;# 
   581  011E                     	;# 
   582  018C                     	;# 
   583  018E                     	;# 
   584  0191                     	;# 
   585  0191                     	;# 
   586  0192                     	;# 
   587  0193                     	;# 
   588  0193                     	;# 
   589  0193                     	;# 
   590  0194                     	;# 
   591  0195                     	;# 
   592  0196                     	;# 
   593  0199                     	;# 
   594  019A                     	;# 
   595  019B                     	;# 
   596  019B                     	;# 
   597  019B                     	;# 
   598  019B                     	;# 
   599  019C                     	;# 
   600  019C                     	;# 
   601  019D                     	;# 
   602  019E                     	;# 
   603  019F                     	;# 
   604  020C                     	;# 
   605  020E                     	;# 
   606  0211                     	;# 
   607  0211                     	;# 
   608  0212                     	;# 
   609  0212                     	;# 
   610  0213                     	;# 
   611  0213                     	;# 
   612  0214                     	;# 
   613  0214                     	;# 
   614  0215                     	;# 
   615  0215                     	;# 
   616  0215                     	;# 
   617  0215                     	;# 
   618  0216                     	;# 
   619  0216                     	;# 
   620  0217                     	;# 
   621  0217                     	;# 
   622  0291                     	;# 
   623  0291                     	;# 
   624  0292                     	;# 
   625  0293                     	;# 
   626  0294                     	;# 
   627  0295                     	;# 
   628  0295                     	;# 
   629  0296                     	;# 
   630  0298                     	;# 
   631  0298                     	;# 
   632  0299                     	;# 
   633  029A                     	;# 
   634  029B                     	;# 
   635  029C                     	;# 
   636  029D                     	;# 
   637  029E                     	;# 
   638  029E                     	;# 
   639  0311                     	;# 
   640  0311                     	;# 
   641  0312                     	;# 
   642  0313                     	;# 
   643  0318                     	;# 
   644  0318                     	;# 
   645  0319                     	;# 
   646  031A                     	;# 
   647  038C                     	;# 
   648  038E                     	;# 
   649  0391                     	;# 
   650  0392                     	;# 
   651  0393                     	;# 
   652  039A                     	;# 
   653  039C                     	;# 
   654  039D                     	;# 
   655  039E                     	;# 
   656  039F                     	;# 
   657  0415                     	;# 
   658  0416                     	;# 
   659  0417                     	;# 
   660  041C                     	;# 
   661  041D                     	;# 
   662  041E                     	;# 
   663  0FE4                     	;# 
   664  0FE5                     	;# 
   665  0FE6                     	;# 
   666  0FE7                     	;# 
   667  0FE8                     	;# 
   668  0FE9                     	;# 
   669  0FEA                     	;# 
   670  0FEB                     	;# 
   671  0FED                     	;# 
   672  0FEE                     	;# 
   673  0FEF                     	;# 
   674  000E                     _PORTCbits	set	14
   675  000C                     _PORTAbits	set	12
   676  005F                     _GIE	set	95
   677  005E                     _PEIE	set	94
   678  008D                     _RCIF	set	141
   679  0095                     _OPTION_REGbits	set	149
   680  008E                     _TRISC	set	142
   681  008C                     _TRISA	set	140
   682  0099                     _OSCCONbits	set	153
   683  048D                     _RCIE	set	1165
   684  04D4                     _HFIOFR	set	1236
   685  010E                     _LATCbits	set	270
   686  010C                     _LATAbits	set	268
   687  011D                     _APFCON0bits	set	285
   688  010E                     _LATC	set	270
   689  010C                     _LATA	set	268
   690  0199                     _RCREG	set	409
   691  018E                     _ANSELC	set	398
   692  018C                     _ANSELA	set	396
   693  019C                     _SPBRGH	set	412
   694  019B                     _SPBRGL	set	411
   695  019F                     _BAUDCONbits	set	415
   696  019D                     _RCSTAbits	set	413
   697  019E                     _TXSTAbits	set	414
   698  0CEF                     _SPEN	set	3311
   699  0CEA                     _FERR	set	3306
   700  0CEC                     _CREN	set	3308
   701  0CE9                     _OERR	set	3305
   702                           
   703                           ; #config settings
   704  0000                     
   705                           	psect	cinit
   706  0050                     start_initialization:	
   707  0050                     __initialization:	
   708                           
   709                           ; Clear objects allocated to COMMON
   710  0050  01FB               	clrf	__pbssCOMMON& (0+127)
   711  0051  01FC               	clrf	(__pbssCOMMON+1)& (0+127)
   712  0052  01FD               	clrf	(__pbssCOMMON+2)& (0+127)
   713                           
   714                           ; Clear objects allocated to BANK0
   715  0053  3020               	movlw	low __pbssBANK0
   716  0054  0084               	movwf	4
   717  0055  3000               	movlw	high __pbssBANK0
   718  0056  0085               	movwf	5
   719  0057  3025               	movlw	37
   720  0058  3186  260D  3180   	fcall	clear_ram0
   721                           
   722                           ; Clear objects allocated to BANK1
   723  005B  30A0               	movlw	low __pbssBANK1
   724  005C  0084               	movwf	4
   725  005D  3000               	movlw	high __pbssBANK1
   726  005E  0085               	movwf	5
   727  005F  3046               	movlw	70
   728  0060  3186  260D         	fcall	clear_ram0
   729  0062                     end_of_initialization:	
   730                           ;End of C runtime variable initialization code
   731                           
   732  0062                     __end_of__initialization:	
   733  0062  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   734  0063  0020               	movlb	0
   735  0064  3184  2C82         	ljmp	_main	;jump to C main() function
   736                           
   737                           	psect	bssCOMMON
   738  007B                     __pbssCOMMON:	
   739  007B                     _OldButton:	
   740  007B                     	ds	1
   741  007C                     _NewF:	
   742  007C                     	ds	1
   743  007D                     _AAcnt:	
   744  007D                     	ds	1
   745                           
   746                           	psect	bssBANK0
   747  0020                     __pbssBANK0:	
   748  0020                     _brt_patt:	
   749  0020                     	ds	20
   750  0034                     _Timer4Count:	
   751  0034                     	ds	4
   752  0038                     _act_period_cnt:	
   753  0038                     	ds	2
   754  003A                     _OldState:	
   755  003A                     	ds	1
   756  003B                     _NowState:	
   757  003B                     	ds	1
   758  003C                     _Button:	
   759  003C                     	ds	1
   760  003D                     _NewKey:	
   761  003D                     	ds	1
   762  003E                     _Time40S_Complete:	
   763  003E                     	ds	1
   764  003F                     _FlowStateF:	
   765  003F                     	ds	1
   766  0040                     _CmdValue:	
   767  0040                     	ds	1
   768  0041                     _NewCmdF:	
   769  0041                     	ds	1
   770  0042                     _Cnten_flag:	
   771  0042                     	ds	1
   772  0043                     _timer_4_countover:	
   773  0043                     	ds	1
   774  0044                     _timer_4_count:	
   775  0044                     	ds	1
   776                           
   777                           	psect	bssBANK1
   778  00A0                     __pbssBANK1:	
   779  00A0                     _led_data:	
   780  00A0                     	ds	70
   781                           
   782                           	psect	clrtext
   783  060D                     clear_ram0:	
   784                           ;	Called with FSR0 containing the base address, and
   785                           ;	WREG with the size to clear
   786                           
   787  060D  0064               	clrwdt	;clear the watchdog before getting into this loop
   788  060E                     clrloop0:	
   789  060E  0180               	clrf	0	;clear RAM location pointed to by FSR
   790  060F  3101               	addfsr 0,1
   791  0610  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   792  0611  2E0E               	goto	clrloop0	;have we reached the end yet?
   793  0612  3400               	retlw	0	;all done for this memory range, return
   794                           
   795                           	psect	cstackCOMMON
   796  0070                     __pcstackCOMMON:	
   797  0070                     ?_make_flow_patt:	
   798  0070                     ?_led_display:	
   799                           ; 1 bytes @ 0x0
   800                           
   801  0070                     ?_DispStandByLight:	
   802                           ; 1 bytes @ 0x0
   803                           
   804  0070                     ?_DispLEDFix_LightRed:	
   805                           ; 1 bytes @ 0x0
   806                           
   807  0070                     ?_Rx_RightLED_StateNoti:	
   808                           ; 1 bytes @ 0x0
   809                           
   810  0070                     ?_Scan_Button:	
   811                           ; 1 bytes @ 0x0
   812                           
   813  0070                     ?_InitSystemClock:	
   814                           ; 1 bytes @ 0x0
   815                           
   816  0070                     ?_InitGPIOS:	
   817                           ; 1 bytes @ 0x0
   818                           
   819  0070                     ?_led_init:	
   820                           ; 1 bytes @ 0x0
   821                           
   822  0070                     ?_High_isr:	
   823                           ; 1 bytes @ 0x0
   824                           
   825  0070                     ??_High_isr:	
   826                           ; 1 bytes @ 0x0
   827                           
   828  0070                     ?_APA102Leds_Splash:	
   829                           ; 1 bytes @ 0x0
   830                           
   831  0070                     ?_Bike_ButtonProcess:	
   832                           ; 1 bytes @ 0x0
   833                           
   834  0070                     ?_main:	
   835                           ; 1 bytes @ 0x0
   836                           
   837  0070                     ?_output_spi:	
   838                           ; 1 bytes @ 0x0
   839                           
   840  0070                     ?_make_fix_patt:	
   841                           ; 1 bytes @ 0x0
   842                           
   843                           
   844                           ; 1 bytes @ 0x0
   845  0070                     	ds	2
   846  0072                     High_isr@RXCheck:	
   847                           
   848                           ; 1 bytes @ 0x2
   849  0072                     	ds	1
   850  0073                     ??_Rx_RightLED_StateNoti:	
   851  0073                     ?_delay_ms:	
   852                           ; 1 bytes @ 0x3
   853                           
   854  0073                     ??_InitSystemClock:	
   855                           ; 1 bytes @ 0x3
   856                           
   857  0073                     ??_InitGPIOS:	
   858                           ; 1 bytes @ 0x3
   859                           
   860  0073                     ??_output_spi:	
   861                           ; 1 bytes @ 0x3
   862                           
   863  0073                     ??_make_fix_patt:	
   864                           ; 1 bytes @ 0x3
   865                           
   866  0073                     ?___bmul:	
   867                           ; 1 bytes @ 0x3
   868                           
   869  0073                     ?___wmul:	
   870                           ; 1 bytes @ 0x3
   871                           
   872  0073                     ?___awdiv:	
   873                           ; 2 bytes @ 0x3
   874                           
   875  0073                     ___bmul@multiplicand:	
   876                           ; 2 bytes @ 0x3
   877                           
   878  0073                     delay_ms@mscnt:	
   879                           ; 1 bytes @ 0x3
   880                           
   881  0073                     ___wmul@multiplier:	
   882                           ; 2 bytes @ 0x3
   883                           
   884  0073                     ___awdiv@divisor:	
   885                           ; 2 bytes @ 0x3
   886                           
   887                           
   888                           ; 2 bytes @ 0x3
   889  0073                     	ds	1
   890  0074                     ??___bmul:	
   891  0074                     output_spi@bitv:	
   892                           ; 1 bytes @ 0x4
   893                           
   894  0074                     make_fix_patt@fbrt:	
   895                           ; 1 bytes @ 0x4
   896                           
   897  0074                     Rx_RightLED_StateNoti@StateValue:	
   898                           ; 1 bytes @ 0x4
   899                           
   900                           
   901                           ; 1 bytes @ 0x4
   902  0074                     	ds	1
   903  0075                     ??_delay_ms:	
   904  0075                     output_spi@vl:	
   905                           ; 1 bytes @ 0x5
   906                           
   907  0075                     make_fix_patt@brti:	
   908                           ; 1 bytes @ 0x5
   909                           
   910  0075                     ___bmul@product:	
   911                           ; 1 bytes @ 0x5
   912                           
   913  0075                     delay_ms@i:	
   914                           ; 1 bytes @ 0x5
   915                           
   916  0075                     ___wmul@multiplicand:	
   917                           ; 2 bytes @ 0x5
   918                           
   919  0075                     ___awdiv@dividend:	
   920                           ; 2 bytes @ 0x5
   921                           
   922                           
   923                           ; 2 bytes @ 0x5
   924  0075                     	ds	1
   925  0076                     output_spi@vl_tmp:	
   926  0076                     ___bmul@multiplier:	
   927                           ; 1 bytes @ 0x6
   928                           
   929                           
   930                           ; 1 bytes @ 0x6
   931  0076                     	ds	1
   932  0077                     ??_led_display:	
   933  0077                     ??___wmul:	
   934                           ; 1 bytes @ 0x7
   935                           
   936  0077                     ??___awdiv:	
   937                           ; 1 bytes @ 0x7
   938                           
   939  0077                     delay_ms@j:	
   940                           ; 1 bytes @ 0x7
   941                           
   942  0077                     ___wmul@product:	
   943                           ; 2 bytes @ 0x7
   944                           
   945                           
   946                           ; 2 bytes @ 0x7
   947  0077                     	ds	1
   948  0078                     ?_make_data:	
   949  0078                     make_data@rcl:	
   950                           ; 1 bytes @ 0x8
   951                           
   952  0078                     led_display@dsi:	
   953                           ; 1 bytes @ 0x8
   954                           
   955                           
   956                           ; 1 bytes @ 0x8
   957  0078                     	ds	1
   958  0079                     ??_DispStandByLight:	
   959  0079                     ??_Scan_Button:	
   960                           ; 1 bytes @ 0x9
   961                           
   962  0079                     ??_Bike_ButtonProcess:	
   963                           ; 1 bytes @ 0x9
   964                           
   965  0079                     make_flow_patt@endn:	
   966                           ; 1 bytes @ 0x9
   967                           
   968  0079                     make_data@gcl:	
   969                           ; 1 bytes @ 0x9
   970                           
   971                           
   972                           ; 1 bytes @ 0x9
   973  0079                     	ds	1
   974  007A                     make_flow_patt@brti:	
   975  007A                     make_data@bcl:	
   976                           ; 1 bytes @ 0xA
   977                           
   978                           
   979                           ; 1 bytes @ 0xA
   980  007A                     	ds	1
   981  007B                     ??_led_init:	
   982                           
   983                           	psect	cstackBANK0
   984  0045                     __pcstackBANK0:	
   985                           ; 1 bytes @ 0xB
   986                           
   987  0045                     ??_make_flow_patt:	
   988  0045                     Bike_ButtonProcess@RxLED_40sNoti:	
   989                           ; 1 bytes @ 0x0
   990                           
   991  0045                     DispStandByLight@sti:	
   992                           ; 1 bytes @ 0x0
   993                           
   994  0045                     ___awdiv@counter:	
   995                           ; 1 bytes @ 0x0
   996                           
   997                           
   998                           ; 1 bytes @ 0x0
   999  0045                     	ds	1
  1000  0046                     Bike_ButtonProcess@ProcessWindF:	
  1001  0046                     ___awdiv@sign:	
  1002                           ; 1 bytes @ 0x1
  1003                           
  1004                           
  1005                           ; 1 bytes @ 0x1
  1006  0046                     	ds	1
  1007  0047                     ___awdiv@quotient:	
  1008                           
  1009                           ; 2 bytes @ 0x2
  1010  0047                     	ds	2
  1011  0049                     ??_make_data:	
  1012                           
  1013                           ; 1 bytes @ 0x4
  1014  0049                     	ds	4
  1015  004D                     make_data@brt:	
  1016                           
  1017                           ; 1 bytes @ 0x8
  1018  004D                     	ds	1
  1019  004E                     make_data@mki:	
  1020                           
  1021                           ; 1 bytes @ 0x9
  1022  004E                     	ds	1
  1023  004F                     ?_DispFlowLight:	
  1024  004F                     ??_DispLEDFix_LightRed:	
  1025                           ; 1 bytes @ 0xA
  1026                           
  1027  004F                     DispFlowLight@colrG:	
  1028                           ; 1 bytes @ 0xA
  1029                           
  1030                           
  1031                           ; 1 bytes @ 0xA
  1032  004F                     	ds	1
  1033  0050                     DispFlowLight@colrB:	
  1034                           
  1035                           ; 1 bytes @ 0xB
  1036  0050                     	ds	1
  1037  0051                     ??_DispFlowLight:	
  1038                           
  1039                           ; 1 bytes @ 0xC
  1040  0051                     	ds	3
  1041  0054                     DispFlowLight@dsptk:	
  1042                           
  1043                           ; 1 bytes @ 0xF
  1044  0054                     	ds	1
  1045  0055                     DispFlowLight@dspti:	
  1046                           
  1047                           ; 1 bytes @ 0x10
  1048  0055                     	ds	1
  1049  0056                     DispFlowLight@colrR:	
  1050                           
  1051                           ; 1 bytes @ 0x11
  1052  0056                     	ds	1
  1053  0057                     DispFlowLight@dsptj:	
  1054                           
  1055                           ; 1 bytes @ 0x12
  1056  0057                     	ds	1
  1057  0058                     ??_APA102Leds_Splash:	
  1058                           
  1059                           ; 1 bytes @ 0x13
  1060  0058                     	ds	1
  1061  0059                     ??_main:	
  1062                           
  1063                           ; 1 bytes @ 0x14
  1064  0059                     	ds	1
  1065                           
  1066                           	psect	maintext
  1067  0482                     __pmaintext:	
  1068 ;;
  1069 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1070 ;;
  1071 ;; *************** function _main *****************
  1072 ;; Defined at:
  1073 ;;		line 477 in file "main.c"
  1074 ;; Parameters:    Size  Location     Type
  1075 ;;		None
  1076 ;; Auto vars:     Size  Location     Type
  1077 ;;		None
  1078 ;; Return value:  Size  Location     Type
  1079 ;;                  1    wreg      void 
  1080 ;; Registers used:
  1081 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1082 ;; Tracked objects:
  1083 ;;		On entry : B1F/0
  1084 ;;		On exit  : 0/0
  1085 ;;		Unchanged: 0/0
  1086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1087 ;;      Params:         0       0       0       0
  1088 ;;      Locals:         0       0       0       0
  1089 ;;      Temps:          0       1       0       0
  1090 ;;      Totals:         0       1       0       0
  1091 ;;Total ram usage:        1 bytes
  1092 ;; Hardware stack levels required when called:    5
  1093 ;; This function calls:
  1094 ;;		_APA102Leds_Splash
  1095 ;;		_Bike_ButtonProcess
  1096 ;;		_DispStandByLight
  1097 ;;		_InitGPIOS
  1098 ;;		_InitSystemClock
  1099 ;;		_Scan_Button
  1100 ;;		_delay_ms
  1101 ;;		_led_init
  1102 ;; This function is called by:
  1103 ;;		Startup code after reset
  1104 ;; This function uses a non-reentrant model
  1105 ;;
  1106                           
  1107                           
  1108                           ;psect for function _main
  1109  0482                     _main:	
  1110                           
  1111                           ;main.c: 480: InitSystemClock();
  1112                           
  1113                           ;incstack = 0
  1114                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1115  0482  3186  2602  3184   	fcall	_InitSystemClock
  1116                           
  1117                           ;main.c: 481: InitGPIOS();
  1118  0485  3185  252F  3184   	fcall	_InitGPIOS
  1119                           
  1120                           ;main.c: 482: delay_ms(200);
  1121  0488  30C8               	movlw	200
  1122  0489  00F3               	movwf	delay_ms@mscnt
  1123  048A  3000               	movlw	0
  1124  048B  00F4               	movwf	delay_ms@mscnt+1
  1125  048C  3185  250C  3184   	fcall	_delay_ms
  1126                           
  1127                           ;main.c: 483: LATCbits.LATC1 = 1;
  1128  048F  0022               	movlb	2	; select bank2
  1129  0490  148E               	bsf	14,1	;volatile
  1130                           
  1131                           ;main.c: 484: LATCbits.LATC0 = 0;
  1132  0491  100E               	bcf	14,0	;volatile
  1133                           
  1134                           ;main.c: 485: LATAbits.LATA4 = 0;
  1135  0492  120C               	bcf	12,4	;volatile
  1136                           
  1137                           ;main.c: 486: DispStandByLight();
  1138  0493  3182  222A  3184   	fcall	_DispStandByLight
  1139                           
  1140                           ;main.c: 488: NowState = stPowerOff;
  1141  0496  0020               	movlb	0	; select bank0
  1142  0497  01BB               	clrf	_NowState
  1143                           
  1144                           ;main.c: 489: OldState = stNone;
  1145  0498  300C               	movlw	12
  1146  0499  00D9               	movwf	??_main
  1147  049A  0859               	movf	??_main,w
  1148  049B  00BA               	movwf	_OldState
  1149                           
  1150                           ;main.c: 490: NewKey = 0;
  1151  049C  01BD               	clrf	_NewKey
  1152                           
  1153                           ;main.c: 491: Button = Key_none;
  1154  049D  30FF               	movlw	255
  1155  049E  00D9               	movwf	??_main
  1156  049F  0859               	movf	??_main,w
  1157  04A0  00BC               	movwf	_Button
  1158                           
  1159                           ;main.c: 492: OldButton = Key_none;
  1160  04A1  30FF               	movlw	255
  1161  04A2  00D9               	movwf	??_main
  1162  04A3  0859               	movf	??_main,w
  1163  04A4  00FB               	movwf	_OldButton
  1164                           
  1165                           ;main.c: 494: Time40S_Complete = 0;
  1166  04A5  01BE               	clrf	_Time40S_Complete
  1167                           
  1168                           ;main.c: 497: AAcnt = 0;
  1169  04A6  01FD               	clrf	_AAcnt
  1170                           
  1171                           ;main.c: 498: NewF = 0;
  1172  04A7  01FC               	clrf	_NewF
  1173                           
  1174                           ;main.c: 499: NewCmdF = 0;
  1175  04A8  01C1               	clrf	_NewCmdF
  1176                           
  1177                           ;main.c: 500: CmdValue = 0;
  1178  04A9  01C0               	clrf	_CmdValue
  1179                           
  1180                           ;main.c: 501: RCIE = 1;
  1181  04AA  0021               	movlb	1	; select bank1
  1182  04AB  1691               	bsf	17,5	;volatile
  1183                           
  1184                           ;main.c: 502: PEIE = 1;
  1185  04AC  170B               	bsf	11,6	;volatile
  1186                           
  1187                           ;main.c: 503: GIE = 1;
  1188  04AD  178B               	bsf	11,7	;volatile
  1189                           
  1190                           ;main.c: 505: delay_ms(1000);
  1191  04AE  30E8               	movlw	232
  1192  04AF  00F3               	movwf	delay_ms@mscnt
  1193  04B0  3003               	movlw	3
  1194  04B1  00F4               	movwf	delay_ms@mscnt+1
  1195  04B2  3185  250C  3184   	fcall	_delay_ms
  1196                           
  1197                           ;main.c: 506: led_init();
  1198  04B5  3185  25F4  3184   	fcall	_led_init
  1199  04B8                     l2302:	
  1200                           ;main.c: 508: while(1)
  1201                           
  1202                           
  1203                           ;main.c: 509: {
  1204                           ;main.c: 510: OldButton = Button;
  1205  04B8  0020               	movlb	0	; select bank0
  1206  04B9  083C               	movf	_Button,w
  1207  04BA  00D9               	movwf	??_main
  1208  04BB  0859               	movf	??_main,w
  1209  04BC  00FB               	movwf	_OldButton
  1210                           
  1211                           ;main.c: 512: Scan_Button();
  1212  04BD  3183  2379  3184   	fcall	_Scan_Button
  1213                           
  1214                           ;main.c: 514: if(Bike_ButtonProcess())
  1215  04C0  3184  24CA  3184   	fcall	_Bike_ButtonProcess
  1216  04C3  3A00               	xorlw	0
  1217  04C4  1903               	skipnz
  1218  04C5  2CB8               	goto	l2302
  1219                           
  1220                           ;main.c: 515: APA102Leds_Splash();
  1221  04C6  3182  22B7  3184   	fcall	_APA102Leds_Splash
  1222  04C9  2CB8               	goto	l2302
  1223  04CA                     __end_of_main:	
  1224                           
  1225                           	psect	text1
  1226  0379                     __ptext1:	
  1227 ;; *************** function _Scan_Button *****************
  1228 ;; Defined at:
  1229 ;;		line 7 in file "KeyButton.c"
  1230 ;; Parameters:    Size  Location     Type
  1231 ;;		None
  1232 ;; Auto vars:     Size  Location     Type
  1233 ;;		None
  1234 ;; Return value:  Size  Location     Type
  1235 ;;                  1    wreg      unsigned char 
  1236 ;; Registers used:
  1237 ;;		wreg, status,2, status,0, pclath, cstack
  1238 ;; Tracked objects:
  1239 ;;		On entry : 0/0
  1240 ;;		On exit  : 0/0
  1241 ;;		Unchanged: 0/0
  1242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1243 ;;      Params:         0       0       0       0
  1244 ;;      Locals:         0       0       0       0
  1245 ;;      Temps:          1       0       0       0
  1246 ;;      Totals:         1       0       0       0
  1247 ;;Total ram usage:        1 bytes
  1248 ;; Hardware stack levels used:    1
  1249 ;; Hardware stack levels required when called:    2
  1250 ;; This function calls:
  1251 ;;		_delay_ms
  1252 ;; This function is called by:
  1253 ;;		_main
  1254 ;; This function uses a non-reentrant model
  1255 ;;
  1256                           
  1257                           
  1258                           ;psect for function _Scan_Button
  1259  0379                     _Scan_Button:	
  1260                           
  1261                           ;KeyButton.c: 9: Button = Key_none;
  1262                           
  1263                           ;incstack = 0
  1264                           ; Regs used in _Scan_Button: [wreg+status,2+status,0+pclath+cstack]
  1265  0379  30FF               	movlw	255
  1266  037A  00F9               	movwf	??_Scan_Button
  1267  037B  0879               	movf	??_Scan_Button,w
  1268  037C  0020               	movlb	0	; select bank0
  1269  037D  00BC               	movwf	_Button
  1270                           
  1271                           ;KeyButton.c: 11: if(PORTCbits.RC4 == 0)
  1272  037E  1A0E               	btfsc	14,4	;volatile
  1273  037F  2B8A               	goto	l2182
  1274                           
  1275                           ;KeyButton.c: 12: {
  1276                           ;KeyButton.c: 13: delay_ms(50);
  1277  0380  3032               	movlw	50
  1278  0381  00F3               	movwf	delay_ms@mscnt
  1279  0382  3000               	movlw	0
  1280  0383  00F4               	movwf	delay_ms@mscnt+1
  1281  0384  3185  250C  3183   	fcall	_delay_ms
  1282                           
  1283                           ;KeyButton.c: 15: if(PORTCbits.RC4 == 0)
  1284  0387  0020               	movlb	0	; select bank0
  1285  0388  1E0E               	btfss	14,4	;volatile
  1286                           
  1287                           ;KeyButton.c: 16: {
  1288                           ;KeyButton.c: 17: Button = KeyPower;
  1289  0389  01BC               	clrf	_Button
  1290  038A                     l2182:	
  1291                           
  1292                           ;KeyButton.c: 18: }
  1293                           ;KeyButton.c: 19: }
  1294                           ;KeyButton.c: 21: if(PORTAbits.RA1 == 0)
  1295  038A  188C               	btfsc	12,1	;volatile
  1296  038B  2B98               	goto	l468
  1297                           
  1298                           ;KeyButton.c: 22: {
  1299                           ;KeyButton.c: 23: delay_ms(50);
  1300  038C  3032               	movlw	50
  1301  038D  00F3               	movwf	delay_ms@mscnt
  1302  038E  3000               	movlw	0
  1303  038F  00F4               	movwf	delay_ms@mscnt+1
  1304  0390  3185  250C  3183   	fcall	_delay_ms
  1305                           
  1306                           ;KeyButton.c: 24: if(PORTAbits.RA1 == 0)
  1307  0393  0020               	movlb	0	; select bank0
  1308  0394  188C               	btfsc	12,1	;volatile
  1309  0395  2B98               	goto	l468
  1310                           
  1311                           ;KeyButton.c: 25: {
  1312                           ;KeyButton.c: 26: Button = KeyLeft;
  1313  0396  01BC               	clrf	_Button
  1314  0397  0ABC               	incf	_Button,f
  1315  0398                     l468:	
  1316                           
  1317                           ;KeyButton.c: 27: }
  1318                           ;KeyButton.c: 28: }
  1319                           ;KeyButton.c: 30: if(PORTCbits.RC3 == 0)
  1320  0398  198E               	btfsc	14,3	;volatile
  1321  0399  2BA8               	goto	l2196
  1322                           
  1323                           ;KeyButton.c: 31: {
  1324                           ;KeyButton.c: 32: delay_ms(50);
  1325  039A  3032               	movlw	50
  1326  039B  00F3               	movwf	delay_ms@mscnt
  1327  039C  3000               	movlw	0
  1328  039D  00F4               	movwf	delay_ms@mscnt+1
  1329  039E  3185  250C  3183   	fcall	_delay_ms
  1330                           
  1331                           ;KeyButton.c: 33: if(PORTCbits.RC3 == 0)
  1332  03A1  0020               	movlb	0	; select bank0
  1333  03A2  198E               	btfsc	14,3	;volatile
  1334  03A3  2BA8               	goto	l2196
  1335                           
  1336                           ;KeyButton.c: 34: {
  1337                           ;KeyButton.c: 35: Button = KeyRight;
  1338  03A4  3002               	movlw	2
  1339  03A5  00F9               	movwf	??_Scan_Button
  1340  03A6  0879               	movf	??_Scan_Button,w
  1341  03A7  00BC               	movwf	_Button
  1342  03A8                     l2196:	
  1343                           
  1344                           ;KeyButton.c: 36: }
  1345                           ;KeyButton.c: 37: }
  1346                           ;KeyButton.c: 39: if(PORTAbits.RA0 == 0)
  1347  03A8  180C               	btfsc	12,0	;volatile
  1348  03A9  2BB8               	goto	l2204
  1349                           
  1350                           ;KeyButton.c: 40: {
  1351                           ;KeyButton.c: 41: delay_ms(30);
  1352  03AA  301E               	movlw	30
  1353  03AB  00F3               	movwf	delay_ms@mscnt
  1354  03AC  3000               	movlw	0
  1355  03AD  00F4               	movwf	delay_ms@mscnt+1
  1356  03AE  3185  250C  3183   	fcall	_delay_ms
  1357                           
  1358                           ;KeyButton.c: 42: if(PORTAbits.RA0 == 0)
  1359  03B1  0020               	movlb	0	; select bank0
  1360  03B2  180C               	btfsc	12,0	;volatile
  1361  03B3  2BB8               	goto	l2204
  1362                           
  1363                           ;KeyButton.c: 43: {
  1364                           ;KeyButton.c: 44: Button = KeyBrakeHold;
  1365  03B4  3003               	movlw	3
  1366  03B5  00F9               	movwf	??_Scan_Button
  1367  03B6  0879               	movf	??_Scan_Button,w
  1368  03B7  00BC               	movwf	_Button
  1369  03B8                     l2204:	
  1370                           
  1371                           ;KeyButton.c: 45: }
  1372                           ;KeyButton.c: 46: }
  1373                           ;KeyButton.c: 48: if((PORTCbits.RC3 == 0) && (PORTAbits.RA1 == 0))
  1374  03B8  1D8E               	btfss	14,3	;volatile
  1375  03B9  188C               	btfsc	12,1	;volatile
  1376  03BA  2BCA               	goto	l2216
  1377                           
  1378                           ;KeyButton.c: 49: {
  1379                           ;KeyButton.c: 50: delay_ms(50);
  1380  03BB  3032               	movlw	50
  1381  03BC  00F3               	movwf	delay_ms@mscnt
  1382  03BD  3000               	movlw	0
  1383  03BE  00F4               	movwf	delay_ms@mscnt+1
  1384  03BF  3185  250C  3183   	fcall	_delay_ms
  1385                           
  1386                           ;KeyButton.c: 51: if((PORTCbits.RC3 == 0) && (PORTAbits.RA1 == 0))
  1387  03C2  0020               	movlb	0	; select bank0
  1388  03C3  1D8E               	btfss	14,3	;volatile
  1389  03C4  188C               	btfsc	12,1	;volatile
  1390  03C5  2BCA               	goto	l2216
  1391                           
  1392                           ;KeyButton.c: 52: {
  1393                           ;KeyButton.c: 53: Button = KeyHazard;
  1394  03C6  3005               	movlw	5
  1395  03C7  00F9               	movwf	??_Scan_Button
  1396  03C8  0879               	movf	??_Scan_Button,w
  1397  03C9  00BC               	movwf	_Button
  1398  03CA                     l2216:	
  1399                           
  1400                           ;KeyButton.c: 54: }
  1401                           ;KeyButton.c: 55: }
  1402                           ;KeyButton.c: 57: NewKey = 0;
  1403  03CA  01BD               	clrf	_NewKey
  1404                           
  1405                           ;KeyButton.c: 59: if (Button != Key_none)
  1406  03CB  0A3C               	incf	_Button,w
  1407  03CC  1903               	btfsc	3,2
  1408  03CD  0008               	return
  1409                           
  1410                           ;KeyButton.c: 60: {
  1411                           ;KeyButton.c: 61: if ((OldButton != Button)&&(OldButton == Key_none))
  1412  03CE  087B               	movf	_OldButton,w
  1413  03CF  063C               	xorwf	_Button,w
  1414  03D0  1903               	skipnz
  1415  03D1  0008               	return
  1416  03D2  0A7B               	incf	_OldButton,w
  1417  03D3  1D03               	btfss	3,2
  1418  03D4  0008               	return
  1419                           
  1420                           ;KeyButton.c: 62: {
  1421                           ;KeyButton.c: 63: NewKey = 1;
  1422  03D5  01BD               	clrf	_NewKey
  1423  03D6  0ABD               	incf	_NewKey,f
  1424  03D7  0008               	return
  1425  03D8                     __end_of_Scan_Button:	
  1426                           ;KeyButton.c: 64: }
  1427                           ;KeyButton.c: 65: }
  1428                           ;KeyButton.c: 67: return NewKey;
  1429                           ;	Return value of _Scan_Button is never used
  1430                           
  1431                           
  1432                           	psect	text2
  1433  0602                     __ptext2:	
  1434 ;; *************** function _InitSystemClock *****************
  1435 ;; Defined at:
  1436 ;;		line 26 in file "main.c"
  1437 ;; Parameters:    Size  Location     Type
  1438 ;;		None
  1439 ;; Auto vars:     Size  Location     Type
  1440 ;;		None
  1441 ;; Return value:  Size  Location     Type
  1442 ;;                  1    wreg      void 
  1443 ;; Registers used:
  1444 ;;		wreg, status,2, status,0
  1445 ;; Tracked objects:
  1446 ;;		On entry : 0/0
  1447 ;;		On exit  : 0/0
  1448 ;;		Unchanged: 0/0
  1449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1450 ;;      Params:         0       0       0       0
  1451 ;;      Locals:         0       0       0       0
  1452 ;;      Temps:          0       0       0       0
  1453 ;;      Totals:         0       0       0       0
  1454 ;;Total ram usage:        0 bytes
  1455 ;; Hardware stack levels used:    1
  1456 ;; Hardware stack levels required when called:    1
  1457 ;; This function calls:
  1458 ;;		Nothing
  1459 ;; This function is called by:
  1460 ;;		_main
  1461 ;; This function uses a non-reentrant model
  1462 ;;
  1463                           
  1464                           
  1465                           ;psect for function _InitSystemClock
  1466  0602                     _InitSystemClock:	
  1467                           
  1468                           ;main.c: 28: OSCCONbits.SCS = 0b00;
  1469                           
  1470                           ;incstack = 0
  1471                           ; Regs used in _InitSystemClock: [wreg+status,2+status,0]
  1472  0602  30FC               	movlw	-4
  1473  0603  0021               	movlb	1	; select bank1
  1474  0604  0599               	andwf	25,f	;volatile
  1475                           
  1476                           ;main.c: 29: OSCCONbits.SPLLEN = 0;
  1477  0605  1399               	bcf	25,7	;volatile
  1478                           
  1479                           ;main.c: 30: OSCCONbits.IRCF = 0b1110;
  1480  0606  0819               	movf	25,w	;volatile
  1481  0607  3987               	andlw	-121
  1482  0608  3870               	iorlw	112
  1483  0609  0099               	movwf	25	;volatile
  1484  060A                     l116:	
  1485                           ;main.c: 32: while(HFIOFR==0);
  1486                           
  1487  060A  1A1A               	btfsc	26,4	;volatile
  1488  060B  0008               	return
  1489  060C  2E0A               	goto	l116
  1490  060D                     __end_of_InitSystemClock:	
  1491                           
  1492                           	psect	text3
  1493  052F                     __ptext3:	
  1494 ;; *************** function _InitGPIOS *****************
  1495 ;; Defined at:
  1496 ;;		line 35 in file "main.c"
  1497 ;; Parameters:    Size  Location     Type
  1498 ;;		None
  1499 ;; Auto vars:     Size  Location     Type
  1500 ;;		None
  1501 ;; Return value:  Size  Location     Type
  1502 ;;                  1    wreg      void 
  1503 ;; Registers used:
  1504 ;;		wreg, status,2
  1505 ;; Tracked objects:
  1506 ;;		On entry : 0/0
  1507 ;;		On exit  : 0/0
  1508 ;;		Unchanged: 0/0
  1509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1510 ;;      Params:         0       0       0       0
  1511 ;;      Locals:         0       0       0       0
  1512 ;;      Temps:          0       0       0       0
  1513 ;;      Totals:         0       0       0       0
  1514 ;;Total ram usage:        0 bytes
  1515 ;; Hardware stack levels used:    1
  1516 ;; Hardware stack levels required when called:    1
  1517 ;; This function calls:
  1518 ;;		Nothing
  1519 ;; This function is called by:
  1520 ;;		_main
  1521 ;; This function uses a non-reentrant model
  1522 ;;
  1523                           
  1524                           
  1525                           ;psect for function _InitGPIOS
  1526  052F                     _InitGPIOS:	
  1527                           
  1528                           ;main.c: 37: LATA = 0x00;
  1529                           
  1530                           ;incstack = 0
  1531                           ; Regs used in _InitGPIOS: [wreg+status,2]
  1532  052F  0022               	movlb	2	; select bank2
  1533  0530  018C               	clrf	12	;volatile
  1534                           
  1535                           ;main.c: 38: LATC = 0x00;
  1536  0531  018E               	clrf	14	;volatile
  1537                           
  1538                           ;main.c: 39: TRISA = 0b11101111;
  1539  0532  30EF               	movlw	239
  1540  0533  0021               	movlb	1	; select bank1
  1541  0534  008C               	movwf	12	;volatile
  1542                           
  1543                           ;main.c: 45: TRISC = 0b11101100;
  1544  0535  30EC               	movlw	236
  1545  0536  008E               	movwf	14	;volatile
  1546                           
  1547                           ;main.c: 46: APFCON0bits.RXDTSEL = 0;
  1548  0537  0022               	movlb	2	; select bank2
  1549  0538  139D               	bcf	29,7	;volatile
  1550                           
  1551                           ;main.c: 47: TXSTAbits.SYNC = 0;
  1552  0539  0023               	movlb	3	; select bank3
  1553  053A  121E               	bcf	30,4	;volatile
  1554                           
  1555                           ;main.c: 48: TXSTAbits.BRGH = 0;
  1556  053B  111E               	bcf	30,2	;volatile
  1557                           
  1558                           ;main.c: 49: RCSTAbits.SPEN = 1;
  1559  053C  179D               	bsf	29,7	;volatile
  1560                           
  1561                           ;main.c: 50: BAUDCONbits.BRG16 = 0;
  1562  053D  119F               	bcf	31,3	;volatile
  1563                           
  1564                           ;main.c: 51: SPBRGL = 103;
  1565  053E  3067               	movlw	103
  1566  053F  009B               	movwf	27	;volatile
  1567                           
  1568                           ;main.c: 52: SPBRGH = 0;
  1569  0540  019C               	clrf	28	;volatile
  1570                           
  1571                           ;main.c: 53: RCSTAbits.CREN = 1;
  1572  0541  161D               	bsf	29,4	;volatile
  1573                           
  1574                           ;main.c: 55: OPTION_REGbits.nWPUEN = 0;
  1575  0542  0021               	movlb	1	; select bank1
  1576  0543  1395               	bcf	21,7	;volatile
  1577                           
  1578                           ;main.c: 56: ANSELA = 0x00;
  1579  0544  0023               	movlb	3	; select bank3
  1580  0545  018C               	clrf	12	;volatile
  1581                           
  1582                           ;main.c: 57: ANSELC = 0x00;
  1583  0546  018E               	clrf	14	;volatile
  1584                           
  1585                           ;main.c: 58: LATAbits.LATA0 = 1;
  1586  0547  0022               	movlb	2	; select bank2
  1587  0548  140C               	bsf	12,0	;volatile
  1588                           
  1589                           ;main.c: 59: LATAbits.LATA1 = 1;
  1590  0549  148C               	bsf	12,1	;volatile
  1591                           
  1592                           ;main.c: 60: LATCbits.LATC3 = 1;
  1593  054A  158E               	bsf	14,3	;volatile
  1594                           
  1595                           ;main.c: 61: LATCbits.LATC4 = 1;
  1596  054B  160E               	bsf	14,4	;volatile
  1597  054C  0008               	return
  1598  054D                     __end_of_InitGPIOS:	
  1599                           
  1600                           	psect	text4
  1601  04CA                     __ptext4:	
  1602 ;; *************** function _Bike_ButtonProcess *****************
  1603 ;; Defined at:
  1604 ;;		line 142 in file "main.c"
  1605 ;; Parameters:    Size  Location     Type
  1606 ;;		None
  1607 ;; Auto vars:     Size  Location     Type
  1608 ;;  ProcessWindF    1    1[BANK0 ] unsigned char 
  1609 ;;  RxLED_40sNot    1    0[BANK0 ] unsigned char 
  1610 ;; Return value:  Size  Location     Type
  1611 ;;                  1    wreg      unsigned char 
  1612 ;; Registers used:
  1613 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1614 ;; Tracked objects:
  1615 ;;		On entry : 0/0
  1616 ;;		On exit  : 0/0
  1617 ;;		Unchanged: 0/0
  1618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1619 ;;      Params:         0       0       0       0
  1620 ;;      Locals:         0       2       0       0
  1621 ;;      Temps:          1       0       0       0
  1622 ;;      Totals:         1       2       0       0
  1623 ;;Total ram usage:        3 bytes
  1624 ;; Hardware stack levels used:    1
  1625 ;; Hardware stack levels required when called:    2
  1626 ;; This function calls:
  1627 ;;		_Rx_RightLED_StateNoti
  1628 ;;		_delay_ms
  1629 ;; This function is called by:
  1630 ;;		_main
  1631 ;; This function uses a non-reentrant model
  1632 ;;
  1633                           
  1634                           
  1635                           ;psect for function _Bike_ButtonProcess
  1636  04CA                     _Bike_ButtonProcess:	
  1637                           
  1638                           ;main.c: 144: unsigned char ProcessWindF = 0;
  1639                           
  1640                           ;incstack = 0
  1641                           ; Regs used in _Bike_ButtonProcess: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1642  04CA  0020               	movlb	0	; select bank0
  1643  04CB  01C6               	clrf	Bike_ButtonProcess@ProcessWindF
  1644                           
  1645                           ;main.c: 145: unsigned char RxLED_40sNoti = 0;
  1646  04CC  01C5               	clrf	Bike_ButtonProcess@RxLED_40sNoti
  1647                           
  1648                           ;main.c: 147: OldState = NowState;
  1649  04CD  083B               	movf	_NowState,w
  1650  04CE  00F9               	movwf	??_Bike_ButtonProcess
  1651  04CF  0879               	movf	??_Bike_ButtonProcess,w
  1652  04D0  00BA               	movwf	_OldState
  1653                           
  1654                           ;main.c: 149: switch(NowState)
  1655  04D1  2CFB               	goto	l2162
  1656  04D2                     l2082:	
  1657                           ;main.c: 150: {
  1658                           ;main.c: 151: case stPowerOff:
  1659                           
  1660  04D2  2CED               	goto	l2154
  1661  04D3                     l2088:	
  1662                           ;main.c: 176: case stStandBy:
  1663                           
  1664                           ;main.c: 174: break;
  1665                           
  1666                           ;main.c: 154: if(OldState != NowState) ProcessWindF = 1;
  1667                           
  1668                           ;main.c: 153: NowState = Rx_RightLED_StateNoti();
  1669                           
  1670                           
  1671                           ;main.c: 178: NowState = Rx_RightLED_StateNoti();
  1672  04D3  3185  2598  3184   	fcall	_Rx_RightLED_StateNoti
  1673  04D6  00F9               	movwf	??_Bike_ButtonProcess
  1674  04D7  0879               	movf	??_Bike_ButtonProcess,w
  1675  04D8  0020               	movlb	0	; select bank0
  1676  04D9  00BB               	movwf	_NowState
  1677                           
  1678                           ;main.c: 179: if(OldState != NowState) ProcessWindF = 1;
  1679  04DA  083A               	movf	_OldState,w
  1680  04DB  063B               	xorwf	_NowState,w
  1681  04DC  1903               	skipnz
  1682  04DD  2CE0               	goto	l2094
  1683  04DE  01C6               	clrf	Bike_ButtonProcess@ProcessWindF
  1684  04DF  0AC6               	incf	Bike_ButtonProcess@ProcessWindF,f
  1685  04E0                     l2094:	
  1686                           
  1687                           ;main.c: 226: if(NowState > stPowerOff)
  1688  04E0  083B               	movf	_NowState,w
  1689  04E1  1903               	btfsc	3,2
  1690  04E2  2D05               	goto	l2164
  1691                           
  1692                           ;main.c: 227: {
  1693                           ;main.c: 228: LATCbits.LATC5 = 1;
  1694  04E3  0022               	movlb	2	; select bank2
  1695  04E4  168E               	bsf	14,5	;volatile
  1696                           
  1697                           ;main.c: 229: delay_ms(100);
  1698  04E5  3064               	movlw	100
  1699  04E6  00F3               	movwf	delay_ms@mscnt
  1700  04E7  3000               	movlw	0
  1701  04E8  00F4               	movwf	delay_ms@mscnt+1
  1702  04E9  3185  250C  3184   	fcall	_delay_ms
  1703                           
  1704                           ;main.c: 230: }
  1705                           ;main.c: 231: break;
  1706  04EC  2D05               	goto	l2164
  1707  04ED                     l2100:	
  1708                           ;main.c: 233: case stStandBy_Left:
  1709                           
  1710  04ED                     l2106:	
  1711                           ;main.c: 270: case stStandBy_Right:
  1712                           
  1713                           ;main.c: 268: break;
  1714                           
  1715                           ;main.c: 236: if(OldState != NowState) ProcessWindF = 1;
  1716                           
  1717                           ;main.c: 235: NowState = Rx_RightLED_StateNoti();
  1718                           
  1719  04ED                     l2112:	
  1720                           ;main.c: 301: case stLeft_BrakeHold:
  1721                           
  1722                           ;main.c: 299: break;
  1723                           
  1724                           ;main.c: 273: if(OldState != NowState) ProcessWindF = 1;
  1725                           
  1726                           ;main.c: 272: NowState = Rx_RightLED_StateNoti();
  1727                           
  1728  04ED                     l2118:	
  1729                           ;main.c: 316: case stLeft_BrakeReleased:
  1730                           
  1731                           ;main.c: 314: break;
  1732                           
  1733                           ;main.c: 304: if(OldState != NowState) ProcessWindF = 1;
  1734                           
  1735                           ;main.c: 303: NowState = Rx_RightLED_StateNoti();
  1736                           
  1737  04ED                     l2124:	
  1738                           ;main.c: 345: case stRight_BrakeHold:
  1739                           
  1740                           ;main.c: 343: break;
  1741                           
  1742                           ;main.c: 319: if(OldState != NowState) ProcessWindF = 1;
  1743                           
  1744                           ;main.c: 318: NowState = Rx_RightLED_StateNoti();
  1745                           
  1746  04ED                     l2130:	
  1747                           ;main.c: 360: case stRight_BrakeReleased:
  1748                           
  1749                           ;main.c: 358: break;
  1750                           
  1751                           ;main.c: 348: if(OldState != NowState) ProcessWindF = 1;
  1752                           
  1753                           ;main.c: 347: NowState = Rx_RightLED_StateNoti();
  1754                           
  1755  04ED                     l2136:	
  1756                           ;main.c: 376: case stStandBy_BrakeHold:
  1757                           
  1758                           ;main.c: 374: break;
  1759                           
  1760                           ;main.c: 363: if(OldState != NowState) ProcessWindF = 1;
  1761                           
  1762                           ;main.c: 362: NowState = Rx_RightLED_StateNoti();
  1763                           
  1764  04ED                     l2142:	
  1765                           ;main.c: 391: case stStandBy_Hazard:
  1766                           
  1767                           ;main.c: 389: break;
  1768                           
  1769                           ;main.c: 379: if(OldState != NowState) ProcessWindF = 1;
  1770                           
  1771                           ;main.c: 378: NowState = Rx_RightLED_StateNoti();
  1772                           
  1773  04ED                     l2148:	
  1774                           ;main.c: 424: case stHazard_BrakeHold:
  1775                           
  1776                           ;main.c: 422: break;
  1777                           
  1778                           ;main.c: 394: if(OldState != NowState) ProcessWindF = 1;
  1779                           
  1780                           ;main.c: 393: NowState = Rx_RightLED_StateNoti();
  1781                           
  1782  04ED                     l2154:	
  1783                           ;main.c: 439: case stHazard_BrakeReleased:
  1784                           
  1785                           ;main.c: 437: break;
  1786                           
  1787                           ;main.c: 427: if(OldState != NowState) ProcessWindF = 1;
  1788                           
  1789                           ;main.c: 426: NowState = Rx_RightLED_StateNoti();
  1790                           
  1791                           
  1792                           ;main.c: 441: NowState = Rx_RightLED_StateNoti();
  1793  04ED  3185  2598  3184   	fcall	_Rx_RightLED_StateNoti
  1794  04F0  00F9               	movwf	??_Bike_ButtonProcess
  1795  04F1  0879               	movf	??_Bike_ButtonProcess,w
  1796  04F2  0020               	movlb	0	; select bank0
  1797  04F3  00BB               	movwf	_NowState
  1798                           
  1799                           ;main.c: 442: if(OldState != NowState) ProcessWindF = 1;
  1800  04F4  083A               	movf	_OldState,w
  1801  04F5  063B               	xorwf	_NowState,w
  1802  04F6  1903               	skipnz
  1803  04F7  2D05               	goto	l2164
  1804  04F8  01C6               	clrf	Bike_ButtonProcess@ProcessWindF
  1805  04F9  0AC6               	incf	Bike_ButtonProcess@ProcessWindF,f
  1806                           
  1807                           ;main.c: 470: }
  1808                           
  1809                           ;main.c: 468: default:break;
  1810                           
  1811                           ;main.c: 466: break;
  1812  04FA  2D05               	goto	l2164
  1813  04FB                     l2162:	
  1814  04FB  083B               	movf	_NowState,w
  1815                           
  1816                           ; Switch size 1, requested type "space"
  1817                           ; Number of cases is 12, Range of values is 0 to 11
  1818                           ; switch strategies available:
  1819                           ; Name         Instructions Cycles
  1820                           ; direct_byte           30     6 (fixed)
  1821                           ; simple_byte           37    19 (average)
  1822                           ; jumptable            260     6 (fixed)
  1823                           ;	Chosen strategy is direct_byte
  1824  04FC  0084               	movwf	4
  1825  04FD  300C               	movlw	12
  1826  04FE  0204               	subwf	4,w
  1827  04FF  1803               	skipnc
  1828  0500  2D05               	goto	l2164
  1829  0501  3185               	movlp	high S2480
  1830  0502  3504               	lslf	4,w
  1831  0503  3E68               	addlw	low S2480
  1832  0504  0082               	movwf	2
  1833  0505                     l2164:	
  1834                           
  1835                           ;main.c: 472: Button = Key_none;
  1836  0505  30FF               	movlw	255
  1837  0506  00F9               	movwf	??_Bike_ButtonProcess
  1838  0507  0879               	movf	??_Bike_ButtonProcess,w
  1839  0508  0020               	movlb	0	; select bank0
  1840  0509  00BC               	movwf	_Button
  1841                           
  1842                           ;main.c: 474: return ProcessWindF;
  1843  050A  0846               	movf	Bike_ButtonProcess@ProcessWindF,w
  1844  050B  0008               	return
  1845  050C                     __end_of_Bike_ButtonProcess:	
  1846                           
  1847                           	psect	swtext1
  1848  0568                     __pswtext1:	
  1849  0568                     S2480:	
  1850  0568  3184  2CD2         	ljmp	l2082
  1851  056A  3184  2CD3         	ljmp	l2088
  1852  056C  3184  2CED         	ljmp	l2100
  1853  056E  3184  2CED         	ljmp	l2106
  1854  0570  3184  2CED         	ljmp	l2112
  1855  0572  3184  2CED         	ljmp	l2118
  1856  0574  3184  2CED         	ljmp	l2124
  1857  0576  3184  2CED         	ljmp	l2130
  1858  0578  3184  2CED         	ljmp	l2136
  1859  057A  3184  2CED         	ljmp	l2142
  1860  057C  3184  2CED         	ljmp	l2148
  1861  057E  3184  2CED         	ljmp	l2154
  1862                           
  1863                           	psect	text5
  1864  0598                     __ptext5:	
  1865 ;; *************** function _Rx_RightLED_StateNoti *****************
  1866 ;; Defined at:
  1867 ;;		line 548 in file "LED_APA102.c"
  1868 ;; Parameters:    Size  Location     Type
  1869 ;;		None
  1870 ;; Auto vars:     Size  Location     Type
  1871 ;;  StateValue      1    4[COMMON] unsigned char 
  1872 ;; Return value:  Size  Location     Type
  1873 ;;                  1    wreg      unsigned char 
  1874 ;; Registers used:
  1875 ;;		wreg, status,2, status,0
  1876 ;; Tracked objects:
  1877 ;;		On entry : 0/0
  1878 ;;		On exit  : 0/0
  1879 ;;		Unchanged: 0/0
  1880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1881 ;;      Params:         0       0       0       0
  1882 ;;      Locals:         1       0       0       0
  1883 ;;      Temps:          1       0       0       0
  1884 ;;      Totals:         2       0       0       0
  1885 ;;Total ram usage:        2 bytes
  1886 ;; Hardware stack levels used:    1
  1887 ;; Hardware stack levels required when called:    1
  1888 ;; This function calls:
  1889 ;;		Nothing
  1890 ;; This function is called by:
  1891 ;;		_Bike_ButtonProcess
  1892 ;; This function uses a non-reentrant model
  1893 ;;
  1894                           
  1895                           
  1896                           ;psect for function _Rx_RightLED_StateNoti
  1897  0598                     _Rx_RightLED_StateNoti:	
  1898  0598                     l1988:	
  1899                           ;LED_APA102.c: 550: unsigned char StateValue;
  1900                           ;LED_APA102.c: 552: while(NewCmdF == 0)
  1901                           
  1902                           ;incstack = 0
  1903                           ; Regs used in _Rx_RightLED_StateNoti: [wreg+status,2+status,0]
  1904                           
  1905  0598  0020               	movlb	0	; select bank0
  1906  0599  0841               	movf	_NewCmdF,w
  1907  059A  1D03               	btfss	3,2
  1908  059B  2DA2               	goto	l1990
  1909                           
  1910                           ;LED_APA102.c: 553: {
  1911                           ;LED_APA102.c: 554: if(FERR == 1)
  1912  059C  0023               	movlb	3	; select bank3
  1913  059D  1D1D               	btfss	29,2	;volatile
  1914  059E  2D98               	goto	l1988
  1915                           
  1916                           ;LED_APA102.c: 555: {
  1917                           ;LED_APA102.c: 556: SPEN = 0;
  1918  059F  139D               	bcf	29,7	;volatile
  1919                           
  1920                           ;LED_APA102.c: 557: SPEN = 1;
  1921  05A0  179D               	bsf	29,7	;volatile
  1922  05A1  2D98               	goto	l1988
  1923  05A2                     l1990:	
  1924                           
  1925                           ;LED_APA102.c: 558: }
  1926                           ;LED_APA102.c: 559: };
  1927                           ;LED_APA102.c: 560: if(NewCmdF == 1)
  1928  05A2  0341               	decf	_NewCmdF,w
  1929  05A3  1D03               	btfss	3,2
  1930  05A4  2DAA               	goto	l1996
  1931                           
  1932                           ;LED_APA102.c: 561: {
  1933                           ;LED_APA102.c: 562: StateValue = CmdValue;
  1934  05A5  0840               	movf	_CmdValue,w
  1935  05A6  00F3               	movwf	??_Rx_RightLED_StateNoti
  1936  05A7  0873               	movf	??_Rx_RightLED_StateNoti,w
  1937  05A8  00F4               	movwf	Rx_RightLED_StateNoti@StateValue
  1938                           
  1939                           ;LED_APA102.c: 563: NewCmdF = 0;
  1940  05A9  01C1               	clrf	_NewCmdF
  1941  05AA                     l1996:	
  1942                           
  1943                           ;LED_APA102.c: 564: }
  1944                           ;LED_APA102.c: 566: return StateValue;
  1945  05AA  0874               	movf	Rx_RightLED_StateNoti@StateValue,w
  1946  05AB  0008               	return
  1947  05AC                     __end_of_Rx_RightLED_StateNoti:	
  1948                           
  1949                           	psect	text6
  1950  02B7                     __ptext6:	
  1951 ;; *************** function _APA102Leds_Splash *****************
  1952 ;; Defined at:
  1953 ;;		line 106 in file "main.c"
  1954 ;; Parameters:    Size  Location     Type
  1955 ;;		None
  1956 ;; Auto vars:     Size  Location     Type
  1957 ;;		None
  1958 ;; Return value:  Size  Location     Type
  1959 ;;                  1    wreg      void 
  1960 ;; Registers used:
  1961 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1962 ;; Tracked objects:
  1963 ;;		On entry : 0/0
  1964 ;;		On exit  : 0/0
  1965 ;;		Unchanged: 0/0
  1966 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1967 ;;      Params:         0       0       0       0
  1968 ;;      Locals:         0       0       0       0
  1969 ;;      Temps:          0       1       0       0
  1970 ;;      Totals:         0       1       0       0
  1971 ;;Total ram usage:        1 bytes
  1972 ;; Hardware stack levels used:    1
  1973 ;; Hardware stack levels required when called:    4
  1974 ;; This function calls:
  1975 ;;		_DispFlowLight
  1976 ;;		_DispLEDFix_LightRed
  1977 ;;		_DispStandByLight
  1978 ;;		_delay_ms
  1979 ;;		_led_init
  1980 ;; This function is called by:
  1981 ;;		_main
  1982 ;; This function uses a non-reentrant model
  1983 ;;
  1984                           
  1985                           
  1986                           ;psect for function _APA102Leds_Splash
  1987  02B7                     _APA102Leds_Splash:	
  1988                           
  1989                           ;main.c: 108: if(OldState != NowState)
  1990                           
  1991                           ;incstack = 0
  1992                           ; Regs used in _APA102Leds_Splash: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1993  02B7  0020               	movlb	0	; select bank0
  1994  02B8  083A               	movf	_OldState,w
  1995  02B9  063B               	xorwf	_NowState,w
  1996  02BA  1903               	skipnz
  1997  02BB  0008               	return
  1998  02BC  2B0C               	goto	l2072
  1999  02BD                     l2044:	
  2000                           ;main.c: 110: {
  2001                           ;main.c: 111: case stPowerOff:led_init();delay_ms(500); break;
  2002                           
  2003                           ;main.c: 109: switch(NowState)
  2004                           
  2005  02BD  3185  25F4  3182   	fcall	_led_init
  2006  02C0  30F4               	movlw	244
  2007  02C1  00F3               	movwf	delay_ms@mscnt
  2008  02C2  3001               	movlw	1
  2009  02C3  00F4               	movwf	delay_ms@mscnt+1
  2010  02C4  3185  250C         	fcall	_delay_ms
  2011  02C6  0008               	return
  2012  02C7                     l2048:	
  2013                           ;main.c: 112: case stStandBy:DispStandByLight(); break;
  2014                           
  2015  02C7  3182  222A         	fcall	_DispStandByLight
  2016  02C9  0008               	return
  2017  02CA                     l2050:	
  2018                           ;main.c: 127: case stStandBy_Left:DispStandByLight();break;
  2019                           
  2020  02CA  3182  222A         	fcall	_DispStandByLight
  2021  02CC  0008               	return
  2022  02CD                     l2052:	
  2023                           ;main.c: 128: case stStandBy_Right:DispFlowLight(200,200,0);break;
  2024                           
  2025  02CD  30C8               	movlw	200
  2026  02CE  0020               	movlb	0	; select bank0
  2027  02CF  00D8               	movwf	??_APA102Leds_Splash
  2028  02D0  0858               	movf	??_APA102Leds_Splash,w
  2029  02D1  00CF               	movwf	DispFlowLight@colrG
  2030  02D2  01D0               	clrf	DispFlowLight@colrB
  2031  02D3  30C8               	movlw	200
  2032  02D4  3183  2318         	fcall	_DispFlowLight
  2033  02D6  0008               	return
  2034  02D7                     l2054:	
  2035                           ;main.c: 129: case stLeft_BrakeHold:DispLEDFix_LightRed();break;
  2036                           
  2037  02D7  3185  25BF         	fcall	_DispLEDFix_LightRed
  2038  02D9  0008               	return
  2039  02DA                     l2056:	
  2040                           ;main.c: 130: case stLeft_BrakeReleased:DispStandByLight();break;
  2041                           
  2042  02DA  3182  222A         	fcall	_DispStandByLight
  2043  02DC  0008               	return
  2044  02DD                     l2058:	
  2045                           ;main.c: 131: case stRight_BrakeHold:DispFlowLight(200,0,0);break;
  2046                           
  2047  02DD  0020               	movlb	0	; select bank0
  2048  02DE  01CF               	clrf	DispFlowLight@colrG
  2049  02DF  01D0               	clrf	DispFlowLight@colrB
  2050  02E0  30C8               	movlw	200
  2051  02E1  3183  2318         	fcall	_DispFlowLight
  2052  02E3  0008               	return
  2053  02E4                     l2060:	
  2054                           ;main.c: 132: case stRight_BrakeReleased:DispFlowLight(200,200,0);break;
  2055                           
  2056  02E4  30C8               	movlw	200
  2057  02E5  0020               	movlb	0	; select bank0
  2058  02E6  00D8               	movwf	??_APA102Leds_Splash
  2059  02E7  0858               	movf	??_APA102Leds_Splash,w
  2060  02E8  00CF               	movwf	DispFlowLight@colrG
  2061  02E9  01D0               	clrf	DispFlowLight@colrB
  2062  02EA  30C8               	movlw	200
  2063  02EB  3183  2318         	fcall	_DispFlowLight
  2064  02ED  0008               	return
  2065  02EE                     l2062:	
  2066                           ;main.c: 133: case stStandBy_BrakeHold:DispLEDFix_LightRed();break;
  2067                           
  2068  02EE  3185  25BF         	fcall	_DispLEDFix_LightRed
  2069  02F0  0008               	return
  2070  02F1                     l2064:	
  2071                           ;main.c: 134: case stStandBy_Hazard:DispFlowLight(200,200,0);break;
  2072                           
  2073  02F1  30C8               	movlw	200
  2074  02F2  0020               	movlb	0	; select bank0
  2075  02F3  00D8               	movwf	??_APA102Leds_Splash
  2076  02F4  0858               	movf	??_APA102Leds_Splash,w
  2077  02F5  00CF               	movwf	DispFlowLight@colrG
  2078  02F6  01D0               	clrf	DispFlowLight@colrB
  2079  02F7  30C8               	movlw	200
  2080  02F8  3183  2318         	fcall	_DispFlowLight
  2081  02FA  0008               	return
  2082  02FB                     l2066:	
  2083                           ;main.c: 135: case stHazard_BrakeHold:DispFlowLight(200,0,0);break;
  2084                           
  2085  02FB  0020               	movlb	0	; select bank0
  2086  02FC  01CF               	clrf	DispFlowLight@colrG
  2087  02FD  01D0               	clrf	DispFlowLight@colrB
  2088  02FE  30C8               	movlw	200
  2089  02FF  3183  2318         	fcall	_DispFlowLight
  2090  0301  0008               	return
  2091  0302                     l2068:	
  2092                           ;main.c: 136: case stHazard_BrakeReleased:DispFlowLight(200,200,0);break;
  2093                           
  2094  0302  30C8               	movlw	200
  2095  0303  0020               	movlb	0	; select bank0
  2096  0304  00D8               	movwf	??_APA102Leds_Splash
  2097  0305  0858               	movf	??_APA102Leds_Splash,w
  2098  0306  00CF               	movwf	DispFlowLight@colrG
  2099  0307  01D0               	clrf	DispFlowLight@colrB
  2100  0308  30C8               	movlw	200
  2101  0309  3183  2318         	fcall	_DispFlowLight
  2102                           
  2103                           ;main.c: 139: }
  2104                           
  2105                           ;main.c: 138: default:break;
  2106  030B  0008               	return
  2107  030C                     l2072:	
  2108  030C  0020               	movlb	0	; select bank0
  2109  030D  083B               	movf	_NowState,w
  2110                           
  2111                           ; Switch size 1, requested type "space"
  2112                           ; Number of cases is 12, Range of values is 0 to 11
  2113                           ; switch strategies available:
  2114                           ; Name         Instructions Cycles
  2115                           ; direct_byte           30     6 (fixed)
  2116                           ; simple_byte           37    19 (average)
  2117                           ; jumptable            260     6 (fixed)
  2118                           ;	Chosen strategy is direct_byte
  2119  030E  0084               	movwf	4
  2120  030F  300C               	movlw	12
  2121  0310  0204               	subwf	4,w
  2122  0311  1803               	skipnc
  2123  0312  0008               	return
  2124  0313  3185               	movlp	high S2482
  2125  0314  3504               	lslf	4,w
  2126  0315  3E80               	addlw	low S2482
  2127  0316  0082               	movwf	2
  2128  0317  0008               	return
  2129  0318                     __end_of_APA102Leds_Splash:	
  2130                           
  2131                           	psect	swtext2
  2132  0580                     __pswtext2:	
  2133  0580                     S2482:	
  2134  0580  3182  2ABD         	ljmp	l2044
  2135  0582  3182  2AC7         	ljmp	l2048
  2136  0584  3182  2ACA         	ljmp	l2050
  2137  0586  3182  2ACD         	ljmp	l2052
  2138  0588  3182  2AD7         	ljmp	l2054
  2139  058A  3182  2ADA         	ljmp	l2056
  2140  058C  3182  2ADD         	ljmp	l2058
  2141  058E  3182  2AE4         	ljmp	l2060
  2142  0590  3182  2AEE         	ljmp	l2062
  2143  0592  3182  2AF1         	ljmp	l2064
  2144  0594  3182  2AFB         	ljmp	l2066
  2145  0596  3183  2B02         	ljmp	l2068
  2146                           
  2147                           	psect	text7
  2148  05F4                     __ptext7:	
  2149 ;; *************** function _led_init *****************
  2150 ;; Defined at:
  2151 ;;		line 64 in file "main.c"
  2152 ;; Parameters:    Size  Location     Type
  2153 ;;		None
  2154 ;; Auto vars:     Size  Location     Type
  2155 ;;		None
  2156 ;; Return value:  Size  Location     Type
  2157 ;;                  1    wreg      void 
  2158 ;; Registers used:
  2159 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2160 ;; Tracked objects:
  2161 ;;		On entry : 0/0
  2162 ;;		On exit  : 0/0
  2163 ;;		Unchanged: 0/0
  2164 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2165 ;;      Params:         0       0       0       0
  2166 ;;      Locals:         0       0       0       0
  2167 ;;      Temps:          0       0       0       0
  2168 ;;      Totals:         0       0       0       0
  2169 ;;Total ram usage:        0 bytes
  2170 ;; Hardware stack levels used:    1
  2171 ;; Hardware stack levels required when called:    3
  2172 ;; This function calls:
  2173 ;;		_led_display
  2174 ;;		_make_data
  2175 ;;		_make_flow_patt
  2176 ;; This function is called by:
  2177 ;;		_APA102Leds_Splash
  2178 ;;		_main
  2179 ;; This function uses a non-reentrant model
  2180 ;;
  2181                           
  2182                           
  2183                           ;psect for function _led_init
  2184  05F4                     _led_init:	
  2185                           
  2186                           ;main.c: 66: make_flow_patt(1);
  2187                           
  2188                           ;incstack = 0
  2189                           ; Regs used in _led_init: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2190  05F4  3001               	movlw	1
  2191  05F5  3181  2194  3185   	fcall	_make_flow_patt
  2192                           
  2193                           ;main.c: 67: make_data(0,0,0,0);
  2194  05F8  01F8               	clrf	make_data@rcl
  2195  05F9  01F9               	clrf	make_data@gcl
  2196  05FA  01FA               	clrf	make_data@bcl
  2197  05FB  3000               	movlw	0
  2198  05FC  3180  2066  3185   	fcall	_make_data
  2199                           
  2200                           ;main.c: 68: led_display();
  2201  05FF  3185  25D1         	fcall	_led_display
  2202  0601  0008               	return
  2203  0602                     __end_of_led_init:	
  2204                           
  2205                           	psect	text8
  2206  022A                     __ptext8:	
  2207 ;; *************** function _DispStandByLight *****************
  2208 ;; Defined at:
  2209 ;;		line 464 in file "LED_APA102.c"
  2210 ;; Parameters:    Size  Location     Type
  2211 ;;		None
  2212 ;; Auto vars:     Size  Location     Type
  2213 ;;  sti             1    0[BANK0 ] unsigned char 
  2214 ;; Return value:  Size  Location     Type
  2215 ;;                  1    wreg      void 
  2216 ;; Registers used:
  2217 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2218 ;; Tracked objects:
  2219 ;;		On entry : 0/0
  2220 ;;		On exit  : 0/0
  2221 ;;		Unchanged: 0/0
  2222 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2223 ;;      Params:         0       0       0       0
  2224 ;;      Locals:         0       1       0       0
  2225 ;;      Temps:          2       0       0       0
  2226 ;;      Totals:         2       1       0       0
  2227 ;;Total ram usage:        3 bytes
  2228 ;; Hardware stack levels used:    1
  2229 ;; Hardware stack levels required when called:    3
  2230 ;; This function calls:
  2231 ;;		_led_display
  2232 ;; This function is called by:
  2233 ;;		_APA102Leds_Splash
  2234 ;;		_main
  2235 ;; This function uses a non-reentrant model
  2236 ;;
  2237                           
  2238                           
  2239                           ;psect for function _DispStandByLight
  2240  022A                     _DispStandByLight:	
  2241                           
  2242                           ;LED_APA102.c: 466: unsigned char sti;
  2243                           ;LED_APA102.c: 467: led_data[0] = 0;
  2244                           
  2245                           ;incstack = 0
  2246                           ; Regs used in _DispStandByLight: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2247  022A  0021               	movlb	1	; select bank1
  2248  022B  01A0               	clrf	_led_data^(0+128)
  2249                           
  2250                           ;LED_APA102.c: 468: led_data[1] = 0;
  2251  022C  01A1               	clrf	(_led_data^(0+128)+1)
  2252                           
  2253                           ;LED_APA102.c: 469: led_data[2] = 0;
  2254  022D  01A2               	clrf	(_led_data^(0+128)+2)
  2255                           
  2256                           ;LED_APA102.c: 470: led_data[3] = 0;
  2257  022E  01A3               	clrf	(_led_data^(0+128)+3)
  2258                           
  2259                           ;LED_APA102.c: 472: for(sti = 0; sti < 17 ; sti++)
  2260  022F  0020               	movlb	0	; select bank0
  2261  0230  01C5               	clrf	DispStandByLight@sti
  2262  0231  3011               	movlw	17
  2263  0232  0245               	subwf	DispStandByLight@sti,w
  2264  0233  1803               	btfsc	3,0
  2265  0234  2AB4               	goto	l1948
  2266  0235                     l1938:	
  2267                           
  2268                           ;LED_APA102.c: 473: {
  2269                           ;LED_APA102.c: 474: if(sti>0)
  2270  0235  0845               	movf	DispStandByLight@sti,w
  2271  0236  1903               	btfsc	3,2
  2272  0237  2A6F               	goto	l1942
  2273                           
  2274                           ;LED_APA102.c: 475: {
  2275                           ;LED_APA102.c: 476: led_data[4 + sti*4] = 0xE0 + (0x1f & 10);
  2276  0238  30EA               	movlw	234
  2277  0239  00F9               	movwf	??_DispStandByLight
  2278  023A  0845               	movf	DispStandByLight@sti,w
  2279  023B  00FA               	movwf	??_DispStandByLight+1
  2280  023C  3001               	movlw	1
  2281  023D                     u2115:	
  2282  023D  35FA               	lslf	??_DispStandByLight+1,f
  2283  023E  3EFF               	addlw	-1
  2284  023F  1D03               	skipz
  2285  0240  2A3D               	goto	u2115
  2286  0241  357A               	lslf	??_DispStandByLight+1,w
  2287  0242  3E04               	addlw	4
  2288  0243  3EA0               	addlw	(low (_led_data| 0))& (0+255)
  2289  0244  0086               	movwf	6
  2290  0245  0187               	clrf	7
  2291  0246  0879               	movf	??_DispStandByLight,w
  2292  0247  0081               	movwf	1
  2293                           
  2294                           ;LED_APA102.c: 477: led_data[5 + sti*4] = 0;
  2295  0248  0845               	movf	DispStandByLight@sti,w
  2296  0249  00F9               	movwf	??_DispStandByLight
  2297  024A  3001               	movlw	1
  2298  024B                     u2125:	
  2299  024B  35F9               	lslf	??_DispStandByLight,f
  2300  024C  3EFF               	addlw	-1
  2301  024D  1D03               	skipz
  2302  024E  2A4B               	goto	u2125
  2303  024F  3579               	lslf	??_DispStandByLight,w
  2304  0250  3E05               	addlw	5
  2305  0251  3EA0               	addlw	(low (_led_data| 0))& (0+255)
  2306  0252  0086               	movwf	6
  2307  0253  0187               	clrf	7
  2308  0254  0181               	clrf	1
  2309                           
  2310                           ;LED_APA102.c: 478: led_data[6 + sti*4] = 50;
  2311  0255  3032               	movlw	50
  2312  0256  00F9               	movwf	??_DispStandByLight
  2313  0257  0845               	movf	DispStandByLight@sti,w
  2314  0258  00FA               	movwf	??_DispStandByLight+1
  2315  0259  3001               	movlw	1
  2316  025A                     u2135:	
  2317  025A  35FA               	lslf	??_DispStandByLight+1,f
  2318  025B  3EFF               	addlw	-1
  2319  025C  1D03               	skipz
  2320  025D  2A5A               	goto	u2135
  2321  025E  357A               	lslf	??_DispStandByLight+1,w
  2322  025F  3E06               	addlw	6
  2323  0260  3EA0               	addlw	(low (_led_data| 0))& (0+255)
  2324  0261  0086               	movwf	6
  2325  0262  0187               	clrf	7
  2326  0263  0879               	movf	??_DispStandByLight,w
  2327  0264  0081               	movwf	1
  2328                           
  2329                           ;LED_APA102.c: 479: led_data[7 + sti*4] = 50;
  2330  0265  3032               	movlw	50
  2331  0266  00F9               	movwf	??_DispStandByLight
  2332  0267  0845               	movf	DispStandByLight@sti,w
  2333  0268  00FA               	movwf	??_DispStandByLight+1
  2334  0269  3001               	movlw	1
  2335  026A                     u2145:	
  2336  026A  35FA               	lslf	??_DispStandByLight+1,f
  2337  026B  3EFF               	addlw	-1
  2338  026C  1D03               	skipz
  2339  026D  2A6A               	goto	u2145
  2340  026E  2AA5               	goto	L1
  2341  026F                     l1942:	
  2342                           ;LED_APA102.c: 480: }
  2343                           
  2344                           
  2345                           ;LED_APA102.c: 481: else
  2346                           ;LED_APA102.c: 482: {
  2347                           ;LED_APA102.c: 483: led_data[4 + sti*4] = 0xE0 + (0x1f & 30);
  2348  026F  30FE               	movlw	254
  2349  0270  00F9               	movwf	??_DispStandByLight
  2350  0271  0845               	movf	DispStandByLight@sti,w
  2351  0272  00FA               	movwf	??_DispStandByLight+1
  2352  0273  3001               	movlw	1
  2353  0274                     u2155:	
  2354  0274  35FA               	lslf	??_DispStandByLight+1,f
  2355  0275  3EFF               	addlw	-1
  2356  0276  1D03               	skipz
  2357  0277  2A74               	goto	u2155
  2358  0278  357A               	lslf	??_DispStandByLight+1,w
  2359  0279  3E04               	addlw	4
  2360  027A  3EA0               	addlw	(low (_led_data| 0))& (0+255)
  2361  027B  0086               	movwf	6
  2362  027C  0187               	clrf	7
  2363  027D  0879               	movf	??_DispStandByLight,w
  2364  027E  0081               	movwf	1
  2365                           
  2366                           ;LED_APA102.c: 484: led_data[5 + sti*4] = 0;
  2367  027F  0845               	movf	DispStandByLight@sti,w
  2368  0280  00F9               	movwf	??_DispStandByLight
  2369  0281  3001               	movlw	1
  2370  0282                     u2165:	
  2371  0282  35F9               	lslf	??_DispStandByLight,f
  2372  0283  3EFF               	addlw	-1
  2373  0284  1D03               	skipz
  2374  0285  2A82               	goto	u2165
  2375  0286  3579               	lslf	??_DispStandByLight,w
  2376  0287  3E05               	addlw	5
  2377  0288  3EA0               	addlw	(low (_led_data| 0))& (0+255)
  2378  0289  0086               	movwf	6
  2379  028A  0187               	clrf	7
  2380  028B  0181               	clrf	1
  2381                           
  2382                           ;LED_APA102.c: 485: led_data[6 + sti*4] = 250;
  2383  028C  30FA               	movlw	250
  2384  028D  00F9               	movwf	??_DispStandByLight
  2385  028E  0845               	movf	DispStandByLight@sti,w
  2386  028F  00FA               	movwf	??_DispStandByLight+1
  2387  0290  3001               	movlw	1
  2388  0291                     u2175:	
  2389  0291  35FA               	lslf	??_DispStandByLight+1,f
  2390  0292  3EFF               	addlw	-1
  2391  0293  1D03               	skipz
  2392  0294  2A91               	goto	u2175
  2393  0295  357A               	lslf	??_DispStandByLight+1,w
  2394  0296  3E06               	addlw	6
  2395  0297  3EA0               	addlw	(low (_led_data| 0))& (0+255)
  2396  0298  0086               	movwf	6
  2397  0299  0187               	clrf	7
  2398  029A  0879               	movf	??_DispStandByLight,w
  2399  029B  0081               	movwf	1
  2400                           
  2401                           ;LED_APA102.c: 486: led_data[7 + sti*4] = 220;
  2402  029C  30DC               	movlw	220
  2403  029D  00F9               	movwf	??_DispStandByLight
  2404  029E  0845               	movf	DispStandByLight@sti,w
  2405  029F  00FA               	movwf	??_DispStandByLight+1
  2406  02A0  3001               	movlw	1
  2407  02A1                     u2185:	
  2408  02A1  35FA               	lslf	??_DispStandByLight+1,f
  2409  02A2  3EFF               	addlw	-1
  2410  02A3  1D03               	skipz
  2411  02A4  2AA1               	goto	u2185
  2412  02A5                     L1:	
  2413  02A5  357A               	lslf	??_DispStandByLight+1,w
  2414  02A6  3E07               	addlw	7
  2415  02A7  3EA0               	addlw	(low (_led_data| 0))& (0+255)
  2416  02A8  0086               	movwf	6
  2417  02A9  0187               	clrf	7
  2418  02AA  0879               	movf	??_DispStandByLight,w
  2419  02AB  0081               	movwf	1
  2420  02AC  3001               	movlw	1
  2421  02AD  00F9               	movwf	??_DispStandByLight
  2422  02AE  0879               	movf	??_DispStandByLight,w
  2423  02AF  07C5               	addwf	DispStandByLight@sti,f
  2424  02B0  3011               	movlw	17
  2425  02B1  0245               	subwf	DispStandByLight@sti,w
  2426  02B2  1C03               	skipc
  2427  02B3  2A35               	goto	l1938
  2428  02B4                     l1948:	
  2429                           
  2430                           ;LED_APA102.c: 487: }
  2431                           ;LED_APA102.c: 488: }
  2432                           ;LED_APA102.c: 489: led_display();
  2433  02B4  3185  25D1         	fcall	_led_display
  2434  02B6  0008               	return
  2435  02B7                     __end_of_DispStandByLight:	
  2436                           
  2437                           	psect	text9
  2438  05BF                     __ptext9:	
  2439 ;; *************** function _DispLEDFix_LightRed *****************
  2440 ;; Defined at:
  2441 ;;		line 520 in file "LED_APA102.c"
  2442 ;; Parameters:    Size  Location     Type
  2443 ;;		None
  2444 ;; Auto vars:     Size  Location     Type
  2445 ;;		None
  2446 ;; Return value:  Size  Location     Type
  2447 ;;                  1    wreg      void 
  2448 ;; Registers used:
  2449 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2450 ;; Tracked objects:
  2451 ;;		On entry : 0/0
  2452 ;;		On exit  : 0/0
  2453 ;;		Unchanged: 0/0
  2454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2455 ;;      Params:         0       0       0       0
  2456 ;;      Locals:         0       0       0       0
  2457 ;;      Temps:          0       1       0       0
  2458 ;;      Totals:         0       1       0       0
  2459 ;;Total ram usage:        1 bytes
  2460 ;; Hardware stack levels used:    1
  2461 ;; Hardware stack levels required when called:    3
  2462 ;; This function calls:
  2463 ;;		_led_display
  2464 ;;		_make_data
  2465 ;;		_make_fix_patt
  2466 ;; This function is called by:
  2467 ;;		_APA102Leds_Splash
  2468 ;; This function uses a non-reentrant model
  2469 ;;
  2470                           
  2471                           
  2472                           ;psect for function _DispLEDFix_LightRed
  2473  05BF                     _DispLEDFix_LightRed:	
  2474                           
  2475                           ;LED_APA102.c: 522: make_fix_patt(30);
  2476                           
  2477                           ;incstack = 0
  2478                           ; Regs used in _DispLEDFix_LightRed: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2479  05BF  301E               	movlw	30
  2480  05C0  3185  25AC  3185   	fcall	_make_fix_patt
  2481                           
  2482                           ;LED_APA102.c: 523: make_data(30,200,0,0);
  2483  05C3  30C8               	movlw	200
  2484  05C4  0020               	movlb	0	; select bank0
  2485  05C5  00CF               	movwf	??_DispLEDFix_LightRed
  2486  05C6  084F               	movf	??_DispLEDFix_LightRed,w
  2487  05C7  00F8               	movwf	make_data@rcl
  2488  05C8  01F9               	clrf	make_data@gcl
  2489  05C9  01FA               	clrf	make_data@bcl
  2490  05CA  301E               	movlw	30
  2491  05CB  3180  2066  3185   	fcall	_make_data
  2492                           
  2493                           ;LED_APA102.c: 524: led_display();
  2494  05CE  3185  25D1         	fcall	_led_display
  2495  05D0  0008               	return
  2496  05D1                     __end_of_DispLEDFix_LightRed:	
  2497                           
  2498                           	psect	text10
  2499  05AC                     __ptext10:	
  2500 ;; *************** function _make_fix_patt *****************
  2501 ;; Defined at:
  2502 ;;		line 87 in file "LED_APA102.c"
  2503 ;; Parameters:    Size  Location     Type
  2504 ;;  fbrt            1    wreg     unsigned char 
  2505 ;; Auto vars:     Size  Location     Type
  2506 ;;  fbrt            1    4[COMMON] unsigned char 
  2507 ;;  brti            1    5[COMMON] unsigned char 
  2508 ;; Return value:  Size  Location     Type
  2509 ;;                  1    wreg      void 
  2510 ;; Registers used:
  2511 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2512 ;; Tracked objects:
  2513 ;;		On entry : 0/0
  2514 ;;		On exit  : 0/0
  2515 ;;		Unchanged: 0/0
  2516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2517 ;;      Params:         0       0       0       0
  2518 ;;      Locals:         2       0       0       0
  2519 ;;      Temps:          1       0       0       0
  2520 ;;      Totals:         3       0       0       0
  2521 ;;Total ram usage:        3 bytes
  2522 ;; Hardware stack levels used:    1
  2523 ;; Hardware stack levels required when called:    1
  2524 ;; This function calls:
  2525 ;;		Nothing
  2526 ;; This function is called by:
  2527 ;;		_DispLEDFix_LightRed
  2528 ;;		_DispRainBowLight
  2529 ;;		_DispLEDFix_LightGreen
  2530 ;;		_DispLEDFix_LightBlue
  2531 ;;		_DispHazardLight
  2532 ;; This function uses a non-reentrant model
  2533 ;;
  2534                           
  2535                           
  2536                           ;psect for function _make_fix_patt
  2537  05AC                     _make_fix_patt:	
  2538                           
  2539                           ;incstack = 0
  2540                           ; Regs used in _make_fix_patt: [wreg+fsr1l+fsr1h+status,2+status,0]
  2541                           ;make_fix_patt@fbrt stored from wreg
  2542  05AC  00F4               	movwf	make_fix_patt@fbrt
  2543                           
  2544                           ;LED_APA102.c: 89: char brti;
  2545                           ;LED_APA102.c: 91: for(brti=0;brti<(17);brti++)
  2546  05AD  01F5               	clrf	make_fix_patt@brti
  2547  05AE                     L2:	
  2548  05AE  3011               	movlw	17
  2549  05AF  0275               	subwf	make_fix_patt@brti,w
  2550  05B0  1803               	btfsc	3,0
  2551  05B1  0008               	return
  2552                           
  2553                           ;LED_APA102.c: 92: {
  2554                           ;LED_APA102.c: 93: brt_patt[brti] = fbrt;
  2555  05B2  0874               	movf	make_fix_patt@fbrt,w
  2556  05B3  00F3               	movwf	??_make_fix_patt
  2557  05B4  0875               	movf	make_fix_patt@brti,w
  2558  05B5  3E20               	addlw	(low (_brt_patt| 0))& (0+255)
  2559  05B6  0086               	movwf	6
  2560  05B7  0187               	clrf	7
  2561  05B8  0873               	movf	??_make_fix_patt,w
  2562  05B9  0081               	movwf	1
  2563  05BA  3001               	movlw	1
  2564  05BB  00F3               	movwf	??_make_fix_patt
  2565  05BC  0873               	movf	??_make_fix_patt,w
  2566  05BD  07F5               	addwf	make_fix_patt@brti,f
  2567  05BE  2DAE               	goto	L2
  2568  05BF                     __end_of_make_fix_patt:	
  2569                           
  2570                           	psect	text11
  2571  0318                     __ptext11:	
  2572 ;; *************** function _DispFlowLight *****************
  2573 ;; Defined at:
  2574 ;;		line 321 in file "LED_APA102.c"
  2575 ;; Parameters:    Size  Location     Type
  2576 ;;  colrR           1    wreg     unsigned char 
  2577 ;;  colrG           1   10[BANK0 ] unsigned char 
  2578 ;;  colrB           1   11[BANK0 ] unsigned char 
  2579 ;; Auto vars:     Size  Location     Type
  2580 ;;  colrR           1   17[BANK0 ] unsigned char 
  2581 ;;  dsptj           1   18[BANK0 ] unsigned char 
  2582 ;;  dspti           1   16[BANK0 ] unsigned char 
  2583 ;;  dsptk           1   15[BANK0 ] unsigned char 
  2584 ;; Return value:  Size  Location     Type
  2585 ;;                  1    wreg      unsigned char 
  2586 ;; Registers used:
  2587 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2588 ;; Tracked objects:
  2589 ;;		On entry : 0/0
  2590 ;;		On exit  : 0/0
  2591 ;;		Unchanged: 0/0
  2592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2593 ;;      Params:         0       2       0       0
  2594 ;;      Locals:         0       4       0       0
  2595 ;;      Temps:          0       3       0       0
  2596 ;;      Totals:         0       9       0       0
  2597 ;;Total ram usage:        9 bytes
  2598 ;; Hardware stack levels used:    1
  2599 ;; Hardware stack levels required when called:    3
  2600 ;; This function calls:
  2601 ;;		_delay_ms
  2602 ;;		_led_display
  2603 ;;		_make_data
  2604 ;;		_make_flow_patt
  2605 ;; This function is called by:
  2606 ;;		_APA102Leds_Splash
  2607 ;; This function uses a non-reentrant model
  2608 ;;
  2609                           
  2610                           
  2611                           ;psect for function _DispFlowLight
  2612  0318                     _DispFlowLight:	
  2613                           
  2614                           ;incstack = 0
  2615                           ; Regs used in _DispFlowLight: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2616                           ;DispFlowLight@colrR stored from wreg
  2617  0318  0020               	movlb	0	; select bank0
  2618  0319  00D6               	movwf	DispFlowLight@colrR
  2619                           
  2620                           ;LED_APA102.c: 323: unsigned char dspti,dsptj;
  2621                           ;LED_APA102.c: 324: unsigned char dsptk;
  2622                           ;LED_APA102.c: 325: dspti = 0;
  2623  031A  01D5               	clrf	DispFlowLight@dspti
  2624                           
  2625                           ;LED_APA102.c: 326: dsptk = 0;
  2626  031B  01D4               	clrf	DispFlowLight@dsptk
  2627  031C                     l1978:	
  2628                           ;LED_APA102.c: 328: while((dspti<50)&(NewCmdF==0))
  2629                           
  2630  031C  3032               	movlw	50
  2631  031D  0255               	subwf	DispFlowLight@dspti,w
  2632  031E  1803               	skipnc
  2633  031F  0008               	return
  2634  0320  0841               	movf	_NewCmdF,w
  2635  0321  1D03               	btfss	3,2
  2636  0322  0008               	return
  2637                           
  2638                           ;LED_APA102.c: 329: {
  2639                           ;LED_APA102.c: 330: dsptj = 1;
  2640  0323  01D7               	clrf	DispFlowLight@dsptj
  2641  0324  0AD7               	incf	DispFlowLight@dsptj,f
  2642                           
  2643                           ;LED_APA102.c: 331: while((dsptj<20) & (dsptk == 0))
  2644  0325  2B6D               	goto	l1972
  2645  0326                     l1952:	
  2646                           
  2647                           ;LED_APA102.c: 332: {
  2648                           ;LED_APA102.c: 333: if(dsptj<6)
  2649  0326  3006               	movlw	6
  2650  0327  0257               	subwf	DispFlowLight@dsptj,w
  2651  0328  1803               	skipnc
  2652  0329  2B2C               	goto	l1956
  2653                           
  2654                           ;LED_APA102.c: 334: {
  2655                           ;LED_APA102.c: 335: make_flow_patt(dsptj);
  2656  032A  0857               	movf	DispFlowLight@dsptj,w
  2657  032B  2B39               	goto	L6
  2658  032C                     l1956:	
  2659                           ;LED_APA102.c: 338: }
  2660                           
  2661                           ;LED_APA102.c: 337: led_display();
  2662                           
  2663                           ;LED_APA102.c: 336: make_data(30,colrR,colrG,colrB);
  2664                           
  2665                           
  2666                           ;LED_APA102.c: 339: else if(dsptj<9)
  2667  032C  3009               	movlw	9
  2668  032D  0020               	movlb	0	; select bank0
  2669  032E  0257               	subwf	DispFlowLight@dsptj,w
  2670  032F  1803               	skipnc
  2671  0330  2B33               	goto	l1960
  2672                           
  2673                           ;LED_APA102.c: 340: {
  2674                           ;LED_APA102.c: 341: make_flow_patt(6);
  2675  0331  3006               	movlw	6
  2676  0332  2B39               	goto	L6
  2677  0333                     l1960:	
  2678                           ;LED_APA102.c: 344: }
  2679                           
  2680                           ;LED_APA102.c: 343: led_display();
  2681                           
  2682                           ;LED_APA102.c: 342: make_data(30,colrR,colrG,colrB);
  2683                           
  2684                           
  2685                           ;LED_APA102.c: 345: else if(dsptj==9)
  2686  0333  3009               	movlw	9
  2687  0334  0020               	movlb	0	; select bank0
  2688  0335  0657               	xorwf	DispFlowLight@dsptj,w
  2689  0336  1D03               	btfss	3,2
  2690  0337  2B4B               	goto	l1964
  2691                           
  2692                           ;LED_APA102.c: 346: {
  2693                           ;LED_APA102.c: 347: make_flow_patt(5);
  2694  0338  3005               	movlw	5
  2695  0339                     L6:	
  2696  0339  3181  2194  3183   	fcall	_make_flow_patt
  2697                           
  2698                           ;LED_APA102.c: 348: make_data(30,colrR,colrG,colrB);
  2699  033C  0020               	movlb	0	; select bank0
  2700  033D  0856               	movf	DispFlowLight@colrR,w
  2701  033E  00D1               	movwf	??_DispFlowLight
  2702  033F  0851               	movf	??_DispFlowLight,w
  2703  0340  00F8               	movwf	make_data@rcl
  2704  0341  084F               	movf	DispFlowLight@colrG,w
  2705  0342  00D2               	movwf	??_DispFlowLight+1
  2706  0343  0852               	movf	??_DispFlowLight+1,w
  2707  0344  00F9               	movwf	make_data@gcl
  2708  0345  0850               	movf	DispFlowLight@colrB,w
  2709  0346  00D3               	movwf	??_DispFlowLight+2
  2710  0347  0853               	movf	??_DispFlowLight+2,w
  2711  0348  00FA               	movwf	make_data@bcl
  2712  0349  301E               	movlw	30
  2713  034A  2B5B               	goto	L3
  2714  034B                     l1964:	
  2715                           ;LED_APA102.c: 350: }
  2716                           
  2717                           ;LED_APA102.c: 349: led_display();
  2718                           
  2719                           
  2720                           ;LED_APA102.c: 351: else if(dsptj > 9)
  2721  034B  300A               	movlw	10
  2722  034C  0020               	movlb	0	; select bank0
  2723  034D  0257               	subwf	DispFlowLight@dsptj,w
  2724  034E  1C03               	skipc
  2725  034F  2B61               	goto	l1968
  2726                           
  2727                           ;LED_APA102.c: 352: {
  2728                           ;LED_APA102.c: 353: make_flow_patt(5);
  2729  0350  3005               	movlw	5
  2730  0351  3181  2194  3183   	fcall	_make_flow_patt
  2731                           
  2732                           ;LED_APA102.c: 354: make_data(0,1,1,1);
  2733  0354  01F8               	clrf	make_data@rcl
  2734  0355  0AF8               	incf	make_data@rcl,f
  2735  0356  01F9               	clrf	make_data@gcl
  2736  0357  0AF9               	incf	make_data@gcl,f
  2737  0358  01FA               	clrf	make_data@bcl
  2738  0359  0AFA               	incf	make_data@bcl,f
  2739  035A  3000               	movlw	0
  2740  035B                     L3:	
  2741  035B  3180  2066  3183   	fcall	_make_data
  2742                           
  2743                           ;LED_APA102.c: 355: led_display();
  2744  035E  3185  25D1  3183   	fcall	_led_display
  2745  0361                     l1968:	
  2746                           
  2747                           ;LED_APA102.c: 356: }
  2748                           ;LED_APA102.c: 357: delay_ms(25);
  2749  0361  3019               	movlw	25
  2750  0362  00F3               	movwf	delay_ms@mscnt
  2751  0363  3000               	movlw	0
  2752  0364  00F4               	movwf	delay_ms@mscnt+1
  2753  0365  3185  250C  3183   	fcall	_delay_ms
  2754                           
  2755                           ;LED_APA102.c: 358: dsptj++;
  2756  0368  3001               	movlw	1
  2757  0369  0020               	movlb	0	; select bank0
  2758  036A  00D1               	movwf	??_DispFlowLight
  2759  036B  0851               	movf	??_DispFlowLight,w
  2760  036C  07D7               	addwf	DispFlowLight@dsptj,f
  2761  036D                     l1972:	
  2762  036D  3014               	movlw	20
  2763  036E  0257               	subwf	DispFlowLight@dsptj,w
  2764  036F  1803               	skipnc
  2765  0370  2B74               	goto	l1976
  2766  0371  0854               	movf	DispFlowLight@dsptk,w
  2767  0372  1903               	btfsc	3,2
  2768  0373  2B26               	goto	l1952
  2769  0374                     l1976:	
  2770                           
  2771                           ;LED_APA102.c: 359: }
  2772                           ;LED_APA102.c: 361: dspti++;
  2773  0374  3001               	movlw	1
  2774  0375  00D1               	movwf	??_DispFlowLight
  2775  0376  0851               	movf	??_DispFlowLight,w
  2776  0377  07D5               	addwf	DispFlowLight@dspti,f
  2777  0378  2B1C               	goto	l1978
  2778  0379                     __end_of_DispFlowLight:	
  2779                           ;LED_APA102.c: 362: }
  2780                           ;LED_APA102.c: 364: return NewCmdF;
  2781                           ;	Return value of _DispFlowLight is never used
  2782                           
  2783                           
  2784                           	psect	text12
  2785  0194                     __ptext12:	
  2786 ;; *************** function _make_flow_patt *****************
  2787 ;; Defined at:
  2788 ;;		line 61 in file "LED_APA102.c"
  2789 ;; Parameters:    Size  Location     Type
  2790 ;;  endn            1    wreg     char 
  2791 ;; Auto vars:     Size  Location     Type
  2792 ;;  endn            1    9[COMMON] char 
  2793 ;;  brti            1   10[COMMON] char 
  2794 ;; Return value:  Size  Location     Type
  2795 ;;                  1    wreg      void 
  2796 ;; Registers used:
  2797 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2798 ;; Tracked objects:
  2799 ;;		On entry : 0/0
  2800 ;;		On exit  : 0/0
  2801 ;;		Unchanged: 0/0
  2802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2803 ;;      Params:         0       0       0       0
  2804 ;;      Locals:         2       0       0       0
  2805 ;;      Temps:          0       7       0       0
  2806 ;;      Totals:         2       7       0       0
  2807 ;;Total ram usage:        9 bytes
  2808 ;; Hardware stack levels used:    1
  2809 ;; Hardware stack levels required when called:    2
  2810 ;; This function calls:
  2811 ;;		___bmul
  2812 ;;		___wmul
  2813 ;; This function is called by:
  2814 ;;		_led_init
  2815 ;;		_DispFlowLight
  2816 ;; This function uses a non-reentrant model
  2817 ;;
  2818                           
  2819                           
  2820                           ;psect for function _make_flow_patt
  2821  0194                     _make_flow_patt:	
  2822                           
  2823                           ;incstack = 0
  2824                           ; Regs used in _make_flow_patt: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2825                           ;make_flow_patt@endn stored from wreg
  2826  0194  00F9               	movwf	make_flow_patt@endn
  2827                           
  2828                           ;LED_APA102.c: 63: signed char brti;
  2829                           ;LED_APA102.c: 64: if(endn<6)
  2830  0195  0879               	movf	make_flow_patt@endn,w
  2831  0196  3A80               	xorlw	128
  2832  0197  3E7A               	addlw	-134
  2833  0198  1803               	skipnc
  2834  0199  29E9               	goto	l1866
  2835                           
  2836                           ;LED_APA102.c: 65: {
  2837                           ;LED_APA102.c: 66: for(brti=0;brti<(17);brti++)
  2838  019A  01FA               	clrf	make_flow_patt@brti
  2839  019B  087A               	movf	make_flow_patt@brti,w
  2840  019C  3A80               	xorlw	128
  2841  019D  3E6F               	addlw	-145
  2842  019E  1803               	btfsc	3,0
  2843  019F  29D7               	goto	l1864
  2844  01A0                     l1854:	
  2845                           
  2846                           ;LED_APA102.c: 67: {
  2847                           ;LED_APA102.c: 68: if(brti<(endn*3))
  2848  01A0  0879               	movf	make_flow_patt@endn,w
  2849  01A1  00F3               	movwf	___wmul@multiplier
  2850  01A2  01F4               	clrf	___wmul@multiplier+1
  2851  01A3  1BF3               	btfsc	___wmul@multiplier,7
  2852  01A4  03F4               	decf	___wmul@multiplier+1,f
  2853  01A5  3003               	movlw	3
  2854  01A6  00F5               	movwf	___wmul@multiplicand
  2855  01A7  3000               	movlw	0
  2856  01A8  00F6               	movwf	___wmul@multiplicand+1
  2857  01A9  3185  254D  3181   	fcall	___wmul
  2858  01AC  087A               	movf	make_flow_patt@brti,w
  2859  01AD  0020               	movlb	0	; select bank0
  2860  01AE  00C5               	movwf	??_make_flow_patt
  2861  01AF  01C6               	clrf	??_make_flow_patt+1
  2862  01B0  1BC5               	btfsc	??_make_flow_patt,7
  2863  01B1  03C6               	decf	??_make_flow_patt+1,f
  2864  01B2  0846               	movf	??_make_flow_patt+1,w
  2865  01B3  3A80               	xorlw	128
  2866  01B4  00C7               	movwf	??_make_flow_patt+2
  2867  01B5  0874               	movf	?___wmul+1,w
  2868  01B6  3A80               	xorlw	128
  2869  01B7  0247               	subwf	??_make_flow_patt+2,w
  2870  01B8  1D03               	skipz
  2871  01B9  29BC               	goto	u1845
  2872  01BA  0873               	movf	?___wmul,w
  2873  01BB  0245               	subwf	??_make_flow_patt,w
  2874  01BC                     u1845:	
  2875  01BC  1803               	skipnc
  2876  01BD  29C8               	goto	l1858
  2877                           
  2878                           ;LED_APA102.c: 69: brt_patt[brti] = 25;
  2879  01BE  3019               	movlw	25
  2880  01BF  0020               	movlb	0	; select bank0
  2881  01C0  00C5               	movwf	??_make_flow_patt
  2882  01C1  087A               	movf	make_flow_patt@brti,w
  2883  01C2  3E20               	addlw	(low (_brt_patt| 0))& (0+255)
  2884  01C3  0086               	movwf	6
  2885  01C4  0187               	clrf	7
  2886  01C5  0845               	movf	??_make_flow_patt,w
  2887  01C6  0081               	movwf	1
  2888  01C7  29CD               	goto	l1860
  2889  01C8                     l1858:	
  2890                           
  2891                           ;LED_APA102.c: 70: else
  2892                           ;LED_APA102.c: 71: brt_patt[brti] = 0;
  2893  01C8  087A               	movf	make_flow_patt@brti,w
  2894  01C9  3E20               	addlw	(low (_brt_patt| 0))& (0+255)
  2895  01CA  0086               	movwf	6
  2896  01CB  0187               	clrf	7
  2897  01CC  0181               	clrf	1
  2898  01CD                     l1860:	
  2899  01CD  3001               	movlw	1
  2900  01CE  0020               	movlb	0	; select bank0
  2901  01CF  00C5               	movwf	??_make_flow_patt
  2902  01D0  0845               	movf	??_make_flow_patt,w
  2903  01D1  07FA               	addwf	make_flow_patt@brti,f
  2904  01D2  087A               	movf	make_flow_patt@brti,w
  2905  01D3  3A80               	xorlw	128
  2906  01D4  3E6F               	addlw	-145
  2907  01D5  1C03               	skipc
  2908  01D6  29A0               	goto	l1854
  2909  01D7                     l1864:	
  2910                           
  2911                           ;LED_APA102.c: 72: }
  2912                           ;LED_APA102.c: 73: brt_patt[endn*3-1] = 15;
  2913  01D7  300F               	movlw	15
  2914  01D8  0020               	movlb	0	; select bank0
  2915  01D9  00C5               	movwf	??_make_flow_patt
  2916  01DA  3003               	movlw	3
  2917  01DB  00C6               	movwf	??_make_flow_patt+1
  2918  01DC  0846               	movf	??_make_flow_patt+1,w
  2919  01DD  00F3               	movwf	___bmul@multiplicand
  2920  01DE  0879               	movf	make_flow_patt@endn,w
  2921  01DF  3185  25E3         	fcall	___bmul
  2922  01E1  3EFF               	addlw	255
  2923  01E2  3E20               	addlw	(low (_brt_patt| 0))& (0+255)
  2924  01E3  0086               	movwf	6
  2925  01E4  0187               	clrf	7
  2926  01E5  0020               	movlb	0	; select bank0
  2927  01E6  0845               	movf	??_make_flow_patt,w
  2928  01E7  0081               	movwf	1
  2929                           
  2930                           ;LED_APA102.c: 74: }
  2931  01E8  0008               	return
  2932  01E9                     l1866:	
  2933                           
  2934                           ;LED_APA102.c: 75: else
  2935                           ;LED_APA102.c: 76: {
  2936                           ;LED_APA102.c: 77: for(brti=0;brti<(17);brti++)
  2937  01E9  01FA               	clrf	make_flow_patt@brti
  2938  01EA                     L8:	
  2939  01EA  087A               	movf	make_flow_patt@brti,w
  2940  01EB  3A80               	xorlw	128
  2941  01EC  3E6F               	addlw	-145
  2942  01ED  1803               	btfsc	3,0
  2943  01EE  0008               	return
  2944                           
  2945                           ;LED_APA102.c: 78: {
  2946                           ;LED_APA102.c: 79: if(brti>((endn-2)*3-1))
  2947  01EF  087A               	movf	make_flow_patt@brti,w
  2948  01F0  0020               	movlb	0	; select bank0
  2949  01F1  00C5               	movwf	??_make_flow_patt
  2950  01F2  01C6               	clrf	??_make_flow_patt+1
  2951  01F3  1BC5               	btfsc	??_make_flow_patt,7
  2952  01F4  03C6               	decf	??_make_flow_patt+1,f
  2953  01F5  0879               	movf	make_flow_patt@endn,w
  2954  01F6  00C7               	movwf	??_make_flow_patt+2
  2955  01F7  01C8               	clrf	??_make_flow_patt+3
  2956  01F8  1BC7               	btfsc	??_make_flow_patt+2,7
  2957  01F9  03C8               	decf	??_make_flow_patt+3,f
  2958  01FA  0847               	movf	??_make_flow_patt+2,w
  2959  01FB  3EFE               	addlw	254
  2960  01FC  00F3               	movwf	___wmul@multiplier
  2961  01FD  30FF               	movlw	255
  2962  01FE  3D48               	addwfc	??_make_flow_patt+3,w
  2963  01FF  00F4               	movwf	___wmul@multiplier+1
  2964  0200  3003               	movlw	3
  2965  0201  00F5               	movwf	___wmul@multiplicand
  2966  0202  3000               	movlw	0
  2967  0203  00F6               	movwf	___wmul@multiplicand+1
  2968  0204  3185  254D  3181   	fcall	___wmul
  2969  0207  0873               	movf	?___wmul,w
  2970  0208  3EFF               	addlw	255
  2971  0209  0020               	movlb	0	; select bank0
  2972  020A  00C9               	movwf	??_make_flow_patt+4
  2973  020B  30FF               	movlw	255
  2974  020C  3D74               	addwfc	?___wmul+1,w
  2975  020D  00CA               	movwf	??_make_flow_patt+5
  2976  020E  084A               	movf	??_make_flow_patt+5,w
  2977  020F  3A80               	xorlw	128
  2978  0210  00CB               	movwf	??_make_flow_patt+6
  2979  0211  0846               	movf	??_make_flow_patt+1,w
  2980  0212  3A80               	xorlw	128
  2981  0213  024B               	subwf	??_make_flow_patt+6,w
  2982  0214  1D03               	skipz
  2983  0215  2A18               	goto	u1875
  2984  0216  0845               	movf	??_make_flow_patt,w
  2985  0217  0249               	subwf	??_make_flow_patt+4,w
  2986  0218                     u1875:	
  2987  0218  1803               	skipnc
  2988  0219  2A1C               	goto	l1876
  2989                           
  2990                           ;LED_APA102.c: 80: brt_patt[brti] = 30;
  2991  021A  301E               	movlw	30
  2992  021B  2A1D               	goto	L7
  2993  021C                     l1876:	
  2994                           
  2995                           ;LED_APA102.c: 81: else
  2996                           ;LED_APA102.c: 82: brt_patt[brti] = 25;
  2997  021C  3019               	movlw	25
  2998  021D                     L7:	
  2999  021D  0020               	movlb	0	; select bank0
  3000  021E  00C5               	movwf	??_make_flow_patt
  3001  021F  087A               	movf	make_flow_patt@brti,w
  3002  0220  3E20               	addlw	(low (_brt_patt| 0))& (0+255)
  3003  0221  0086               	movwf	6
  3004  0222  0187               	clrf	7
  3005  0223  0845               	movf	??_make_flow_patt,w
  3006  0224  0081               	movwf	1
  3007  0225  3001               	movlw	1
  3008  0226  00C5               	movwf	??_make_flow_patt
  3009  0227  0845               	movf	??_make_flow_patt,w
  3010  0228  07FA               	addwf	make_flow_patt@brti,f
  3011  0229  29EA               	goto	L8
  3012  022A                     __end_of_make_flow_patt:	
  3013                           
  3014                           	psect	text13
  3015  054D                     __ptext13:	
  3016 ;; *************** function ___wmul *****************
  3017 ;; Defined at:
  3018 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\Umul16.c"
  3019 ;; Parameters:    Size  Location     Type
  3020 ;;  multiplier      2    3[COMMON] unsigned int 
  3021 ;;  multiplicand    2    5[COMMON] unsigned int 
  3022 ;; Auto vars:     Size  Location     Type
  3023 ;;  product         2    7[COMMON] unsigned int 
  3024 ;; Return value:  Size  Location     Type
  3025 ;;                  2    3[COMMON] unsigned int 
  3026 ;; Registers used:
  3027 ;;		wreg, status,2, status,0
  3028 ;; Tracked objects:
  3029 ;;		On entry : 0/0
  3030 ;;		On exit  : 0/0
  3031 ;;		Unchanged: 0/0
  3032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3033 ;;      Params:         4       0       0       0
  3034 ;;      Locals:         2       0       0       0
  3035 ;;      Temps:          0       0       0       0
  3036 ;;      Totals:         6       0       0       0
  3037 ;;Total ram usage:        6 bytes
  3038 ;; Hardware stack levels used:    1
  3039 ;; Hardware stack levels required when called:    1
  3040 ;; This function calls:
  3041 ;;		Nothing
  3042 ;; This function is called by:
  3043 ;;		_make_flow_patt
  3044 ;; This function uses a non-reentrant model
  3045 ;;
  3046                           
  3047                           
  3048                           ;psect for function ___wmul
  3049  054D                     ___wmul:	
  3050                           
  3051                           ;incstack = 0
  3052                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3053  054D  01F7               	clrf	___wmul@product
  3054  054E  01F8               	clrf	___wmul@product+1
  3055  054F                     l1764:	
  3056  054F  1C73               	btfss	___wmul@multiplier,0
  3057  0550  2D55               	goto	l562
  3058  0551  0875               	movf	___wmul@multiplicand,w
  3059  0552  07F7               	addwf	___wmul@product,f
  3060  0553  0876               	movf	___wmul@multiplicand+1,w
  3061  0554  3DF8               	addwfc	___wmul@product+1,f
  3062  0555                     l562:	
  3063  0555  3001               	movlw	1
  3064  0556                     u1645:	
  3065  0556  35F5               	lslf	___wmul@multiplicand,f
  3066  0557  0DF6               	rlf	___wmul@multiplicand+1,f
  3067  0558  0B89               	decfsz	9,f
  3068  0559  2D56               	goto	u1645
  3069  055A  3001               	movlw	1
  3070  055B                     u1655:	
  3071  055B  36F4               	lsrf	___wmul@multiplier+1,f
  3072  055C  0CF3               	rrf	___wmul@multiplier,f
  3073  055D  0B89               	decfsz	9,f
  3074  055E  2D5B               	goto	u1655
  3075  055F  0873               	movf	___wmul@multiplier,w
  3076  0560  0474               	iorwf	___wmul@multiplier+1,w
  3077  0561  1D03               	btfss	3,2
  3078  0562  2D4F               	goto	l1764
  3079  0563  0878               	movf	___wmul@product+1,w
  3080  0564  00F4               	movwf	?___wmul+1
  3081  0565  0877               	movf	___wmul@product,w
  3082  0566  00F3               	movwf	?___wmul
  3083  0567  0008               	return
  3084  0568                     __end_of___wmul:	
  3085                           
  3086                           	psect	text14
  3087  05E3                     __ptext14:	
  3088 ;; *************** function ___bmul *****************
  3089 ;; Defined at:
  3090 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\Umul8.c"
  3091 ;; Parameters:    Size  Location     Type
  3092 ;;  multiplier      1    wreg     unsigned char 
  3093 ;;  multiplicand    1    3[COMMON] unsigned char 
  3094 ;; Auto vars:     Size  Location     Type
  3095 ;;  multiplier      1    6[COMMON] unsigned char 
  3096 ;;  product         1    5[COMMON] unsigned char 
  3097 ;; Return value:  Size  Location     Type
  3098 ;;                  1    wreg      unsigned char 
  3099 ;; Registers used:
  3100 ;;		wreg, status,2, status,0
  3101 ;; Tracked objects:
  3102 ;;		On entry : 0/0
  3103 ;;		On exit  : 0/0
  3104 ;;		Unchanged: 0/0
  3105 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3106 ;;      Params:         1       0       0       0
  3107 ;;      Locals:         2       0       0       0
  3108 ;;      Temps:          1       0       0       0
  3109 ;;      Totals:         4       0       0       0
  3110 ;;Total ram usage:        4 bytes
  3111 ;; Hardware stack levels used:    1
  3112 ;; Hardware stack levels required when called:    1
  3113 ;; This function calls:
  3114 ;;		Nothing
  3115 ;; This function is called by:
  3116 ;;		_make_flow_patt
  3117 ;;		_DispRainBowLight
  3118 ;; This function uses a non-reentrant model
  3119 ;;
  3120                           
  3121                           
  3122                           ;psect for function ___bmul
  3123  05E3                     ___bmul:	
  3124                           
  3125                           ;incstack = 0
  3126                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  3127                           ;___bmul@multiplier stored from wreg
  3128  05E3  00F6               	movwf	___bmul@multiplier
  3129  05E4  01F5               	clrf	___bmul@product
  3130  05E5                     l1778:	
  3131  05E5  1C76               	btfss	___bmul@multiplier,0
  3132  05E6  2DEB               	goto	l1782
  3133  05E7  0873               	movf	___bmul@multiplicand,w
  3134  05E8  00F4               	movwf	??___bmul
  3135  05E9  0874               	movf	??___bmul,w
  3136  05EA  07F5               	addwf	___bmul@product,f
  3137  05EB                     l1782:	
  3138  05EB  1003               	clrc
  3139  05EC  0DF3               	rlf	___bmul@multiplicand,f
  3140  05ED  1003               	clrc
  3141  05EE  0CF6               	rrf	___bmul@multiplier,f
  3142  05EF  0876               	movf	___bmul@multiplier,w
  3143  05F0  1D03               	btfss	3,2
  3144  05F1  2DE5               	goto	l1778
  3145  05F2  0875               	movf	___bmul@product,w
  3146  05F3  0008               	return
  3147  05F4                     __end_of___bmul:	
  3148                           
  3149                           	psect	text15
  3150  0066                     __ptext15:	
  3151 ;; *************** function _make_data *****************
  3152 ;; Defined at:
  3153 ;;		line 97 in file "LED_APA102.c"
  3154 ;; Parameters:    Size  Location     Type
  3155 ;;  brt             1    wreg     unsigned char 
  3156 ;;  rcl             1    8[COMMON] unsigned char 
  3157 ;;  gcl             1    9[COMMON] unsigned char 
  3158 ;;  bcl             1   10[COMMON] unsigned char 
  3159 ;; Auto vars:     Size  Location     Type
  3160 ;;  brt             1    8[BANK0 ] unsigned char 
  3161 ;;  mki             1    9[BANK0 ] unsigned char 
  3162 ;; Return value:  Size  Location     Type
  3163 ;;                  1    wreg      void 
  3164 ;; Registers used:
  3165 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3166 ;; Tracked objects:
  3167 ;;		On entry : 0/0
  3168 ;;		On exit  : 0/0
  3169 ;;		Unchanged: 0/0
  3170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3171 ;;      Params:         3       0       0       0
  3172 ;;      Locals:         0       2       0       0
  3173 ;;      Temps:          0       4       0       0
  3174 ;;      Totals:         3       6       0       0
  3175 ;;Total ram usage:        9 bytes
  3176 ;; Hardware stack levels used:    1
  3177 ;; Hardware stack levels required when called:    2
  3178 ;; This function calls:
  3179 ;;		___awdiv
  3180 ;; This function is called by:
  3181 ;;		_led_init
  3182 ;;		_DispFlowLight
  3183 ;;		_DispLEDFix_LightRed
  3184 ;;		_DispRainBowLight
  3185 ;;		_DispLEDFix_LightGreen
  3186 ;;		_DispLEDFix_LightBlue
  3187 ;;		_DispHazardLight
  3188 ;; This function uses a non-reentrant model
  3189 ;;
  3190                           
  3191                           
  3192                           ;psect for function _make_data
  3193  0066                     _make_data:	
  3194                           
  3195                           ;incstack = 0
  3196                           ; Regs used in _make_data: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3197                           ;make_data@brt stored from wreg
  3198  0066  0020               	movlb	0	; select bank0
  3199  0067  00CD               	movwf	make_data@brt
  3200                           
  3201                           ;LED_APA102.c: 99: unsigned char mki;
  3202                           ;LED_APA102.c: 101: led_data[0] = 0;
  3203  0068  0021               	movlb	1	; select bank1
  3204  0069  01A0               	clrf	_led_data^(0+128)
  3205                           
  3206                           ;LED_APA102.c: 102: led_data[1] = 0;
  3207  006A  01A1               	clrf	(_led_data^(0+128)+1)
  3208                           
  3209                           ;LED_APA102.c: 103: led_data[2] = 0;
  3210  006B  01A2               	clrf	(_led_data^(0+128)+2)
  3211                           
  3212                           ;LED_APA102.c: 104: led_data[3] = 0;
  3213  006C  01A3               	clrf	(_led_data^(0+128)+3)
  3214                           
  3215                           ;LED_APA102.c: 106: for(mki = 0; mki < 17 ; mki++)
  3216  006D  0020               	movlb	0	; select bank0
  3217  006E  01CE               	clrf	make_data@mki
  3218  006F                     L12:	
  3219  006F  3011               	movlw	17
  3220  0070  024E               	subwf	make_data@mki,w
  3221  0071  1803               	btfsc	3,0
  3222  0072  0008               	return
  3223                           
  3224                           ;LED_APA102.c: 107: {
  3225                           ;LED_APA102.c: 108: if(mki>0)
  3226  0073  084E               	movf	make_data@mki,w
  3227  0074  1903               	btfsc	3,2
  3228  0075  2886               	goto	l1892
  3229                           
  3230                           ;LED_APA102.c: 109: led_data[4 + mki*4] = 0xE0 + (0x1f & brt_patt[mki]);
  3231  0076  084E               	movf	make_data@mki,w
  3232  0077  3E20               	addlw	(low (_brt_patt| 0))& (0+255)
  3233  0078  0086               	movwf	6
  3234  0079  0187               	clrf	7
  3235  007A  0801               	movf	1,w
  3236  007B  391F               	andlw	31
  3237  007C  3EE0               	addlw	224
  3238  007D  00C9               	movwf	??_make_data
  3239  007E  084E               	movf	make_data@mki,w
  3240  007F  00CA               	movwf	??_make_data+1
  3241  0080  3001               	movlw	1
  3242  0081                     u1915:	
  3243  0081  35CA               	lslf	??_make_data+1,f
  3244  0082  3EFF               	addlw	-1
  3245  0083  1D03               	skipz
  3246  0084  2881               	goto	u1915
  3247  0085  2891               	goto	L9
  3248  0086                     l1892:	
  3249                           
  3250                           ;LED_APA102.c: 110: else
  3251                           ;LED_APA102.c: 111: led_data[4 + mki*4] = 0xE0 + (0x1f & brt);
  3252  0086  084D               	movf	make_data@brt,w
  3253  0087  391F               	andlw	31
  3254  0088  3EE0               	addlw	224
  3255  0089  00C9               	movwf	??_make_data
  3256  008A  084E               	movf	make_data@mki,w
  3257  008B  00CA               	movwf	??_make_data+1
  3258  008C  3001               	movlw	1
  3259  008D                     u1925:	
  3260  008D  35CA               	lslf	??_make_data+1,f
  3261  008E  3EFF               	addlw	-1
  3262  008F  1D03               	skipz
  3263  0090  288D               	goto	u1925
  3264  0091                     L9:	
  3265  0091  354A               	lslf	??_make_data+1,w
  3266  0092  3E04               	addlw	4
  3267  0093  3EA0               	addlw	(low (_led_data| 0))& (0+255)
  3268  0094  0086               	movwf	6
  3269  0095  0187               	clrf	7
  3270  0096  0849               	movf	??_make_data,w
  3271  0097  0081               	movwf	1
  3272                           
  3273                           ;LED_APA102.c: 113: if(brt_patt[mki]==25)
  3274  0098  084E               	movf	make_data@mki,w
  3275  0099  3E20               	addlw	(low (_brt_patt| 0))& (0+255)
  3276  009A  0086               	movwf	6
  3277  009B  0187               	clrf	7
  3278  009C  3019               	movlw	25
  3279  009D  0601               	xorwf	1,w
  3280  009E  1D03               	btfss	3,2
  3281  009F  28FA               	goto	l1896
  3282                           
  3283                           ;LED_APA102.c: 114: {
  3284                           ;LED_APA102.c: 115: led_data[5 + mki*4] = bcl/3*2;
  3285  00A0  3003               	movlw	3
  3286  00A1  00F3               	movwf	___awdiv@divisor
  3287  00A2  3000               	movlw	0
  3288  00A3  00F4               	movwf	___awdiv@divisor+1
  3289  00A4  087A               	movf	make_data@bcl,w
  3290  00A5  00C9               	movwf	??_make_data
  3291  00A6  01CA               	clrf	??_make_data+1
  3292  00A7  0849               	movf	??_make_data,w
  3293  00A8  00F5               	movwf	___awdiv@dividend
  3294  00A9  084A               	movf	??_make_data+1,w
  3295  00AA  00F6               	movwf	___awdiv@dividend+1
  3296  00AB  3184  2430  3180   	fcall	___awdiv
  3297  00AE  0873               	movf	?___awdiv,w
  3298  00AF  0709               	addwf	9,w
  3299  00B0  0020               	movlb	0	; select bank0
  3300  00B1  00CB               	movwf	??_make_data+2
  3301  00B2  084E               	movf	make_data@mki,w
  3302  00B3  00CC               	movwf	??_make_data+3
  3303  00B4  3001               	movlw	1
  3304  00B5                     u1945:	
  3305  00B5  35CC               	lslf	??_make_data+3,f
  3306  00B6  3EFF               	addlw	-1
  3307  00B7  1D03               	skipz
  3308  00B8  28B5               	goto	u1945
  3309  00B9  354C               	lslf	??_make_data+3,w
  3310  00BA  3E05               	addlw	5
  3311  00BB  3EA0               	addlw	(low (_led_data| 0))& (0+255)
  3312  00BC  0086               	movwf	6
  3313  00BD  0187               	clrf	7
  3314  00BE  084B               	movf	??_make_data+2,w
  3315  00BF  0081               	movwf	1
  3316                           
  3317                           ;LED_APA102.c: 116: led_data[6 + mki*4] = gcl/3*2;
  3318  00C0  3003               	movlw	3
  3319  00C1  00F3               	movwf	___awdiv@divisor
  3320  00C2  3000               	movlw	0
  3321  00C3  00F4               	movwf	___awdiv@divisor+1
  3322  00C4  0879               	movf	make_data@gcl,w
  3323  00C5  00C9               	movwf	??_make_data
  3324  00C6  01CA               	clrf	??_make_data+1
  3325  00C7  0849               	movf	??_make_data,w
  3326  00C8  00F5               	movwf	___awdiv@dividend
  3327  00C9  084A               	movf	??_make_data+1,w
  3328  00CA  00F6               	movwf	___awdiv@dividend+1
  3329  00CB  3184  2430  3180   	fcall	___awdiv
  3330  00CE  0873               	movf	?___awdiv,w
  3331  00CF  0709               	addwf	9,w
  3332  00D0  0020               	movlb	0	; select bank0
  3333  00D1  00CB               	movwf	??_make_data+2
  3334  00D2  084E               	movf	make_data@mki,w
  3335  00D3  00CC               	movwf	??_make_data+3
  3336  00D4  3001               	movlw	1
  3337  00D5                     u1955:	
  3338  00D5  35CC               	lslf	??_make_data+3,f
  3339  00D6  3EFF               	addlw	-1
  3340  00D7  1D03               	skipz
  3341  00D8  28D5               	goto	u1955
  3342  00D9  354C               	lslf	??_make_data+3,w
  3343  00DA  3E06               	addlw	6
  3344  00DB  3EA0               	addlw	(low (_led_data| 0))& (0+255)
  3345  00DC  0086               	movwf	6
  3346  00DD  0187               	clrf	7
  3347  00DE  084B               	movf	??_make_data+2,w
  3348  00DF  0081               	movwf	1
  3349                           
  3350                           ;LED_APA102.c: 117: led_data[7 + mki*4] = rcl/3*2;
  3351  00E0  3003               	movlw	3
  3352  00E1  00F3               	movwf	___awdiv@divisor
  3353  00E2  3000               	movlw	0
  3354  00E3  00F4               	movwf	___awdiv@divisor+1
  3355  00E4  0878               	movf	make_data@rcl,w
  3356  00E5  00C9               	movwf	??_make_data
  3357  00E6  01CA               	clrf	??_make_data+1
  3358  00E7  0849               	movf	??_make_data,w
  3359  00E8  00F5               	movwf	___awdiv@dividend
  3360  00E9  084A               	movf	??_make_data+1,w
  3361  00EA  00F6               	movwf	___awdiv@dividend+1
  3362  00EB  3184  2430  3180   	fcall	___awdiv
  3363  00EE  0873               	movf	?___awdiv,w
  3364  00EF  0709               	addwf	9,w
  3365  00F0  0020               	movlb	0	; select bank0
  3366  00F1  00CB               	movwf	??_make_data+2
  3367  00F2  084E               	movf	make_data@mki,w
  3368  00F3  00CC               	movwf	??_make_data+3
  3369  00F4  3001               	movlw	1
  3370  00F5                     u1965:	
  3371  00F5  35CC               	lslf	??_make_data+3,f
  3372  00F6  3EFF               	addlw	-1
  3373  00F7  1D03               	skipz
  3374  00F8  28F5               	goto	u1965
  3375  00F9  2958               	goto	L10
  3376  00FA                     l1896:	
  3377                           ;LED_APA102.c: 118: }
  3378                           
  3379                           
  3380                           ;LED_APA102.c: 119: else if(brt_patt[mki]==15)
  3381  00FA  084E               	movf	make_data@mki,w
  3382  00FB  3E20               	addlw	(low (_brt_patt| 0))& (0+255)
  3383  00FC  0086               	movwf	6
  3384  00FD  0187               	clrf	7
  3385  00FE  300F               	movlw	15
  3386  00FF  0601               	xorwf	1,w
  3387  0100  1D03               	btfss	3,2
  3388  0101  295F               	goto	l1900
  3389                           
  3390                           ;LED_APA102.c: 120: {
  3391                           ;LED_APA102.c: 121: led_data[5 + mki*4] = bcl/3;
  3392  0102  3003               	movlw	3
  3393  0103  00F3               	movwf	___awdiv@divisor
  3394  0104  3000               	movlw	0
  3395  0105  00F4               	movwf	___awdiv@divisor+1
  3396  0106  087A               	movf	make_data@bcl,w
  3397  0107  00C9               	movwf	??_make_data
  3398  0108  01CA               	clrf	??_make_data+1
  3399  0109  0849               	movf	??_make_data,w
  3400  010A  00F5               	movwf	___awdiv@dividend
  3401  010B  084A               	movf	??_make_data+1,w
  3402  010C  00F6               	movwf	___awdiv@dividend+1
  3403  010D  3184  2430  3180   	fcall	___awdiv
  3404  0110  0873               	movf	?___awdiv,w
  3405  0111  0020               	movlb	0	; select bank0
  3406  0112  00CB               	movwf	??_make_data+2
  3407  0113  084E               	movf	make_data@mki,w
  3408  0114  00CC               	movwf	??_make_data+3
  3409  0115  3001               	movlw	1
  3410  0116                     u1985:	
  3411  0116  35CC               	lslf	??_make_data+3,f
  3412  0117  3EFF               	addlw	-1
  3413  0118  1D03               	skipz
  3414  0119  2916               	goto	u1985
  3415  011A  354C               	lslf	??_make_data+3,w
  3416  011B  3E05               	addlw	5
  3417  011C  3EA0               	addlw	(low (_led_data| 0))& (0+255)
  3418  011D  0086               	movwf	6
  3419  011E  0187               	clrf	7
  3420  011F  084B               	movf	??_make_data+2,w
  3421  0120  0081               	movwf	1
  3422                           
  3423                           ;LED_APA102.c: 122: led_data[6 + mki*4] = gcl/3;
  3424  0121  3003               	movlw	3
  3425  0122  00F3               	movwf	___awdiv@divisor
  3426  0123  3000               	movlw	0
  3427  0124  00F4               	movwf	___awdiv@divisor+1
  3428  0125  0879               	movf	make_data@gcl,w
  3429  0126  00C9               	movwf	??_make_data
  3430  0127  01CA               	clrf	??_make_data+1
  3431  0128  0849               	movf	??_make_data,w
  3432  0129  00F5               	movwf	___awdiv@dividend
  3433  012A  084A               	movf	??_make_data+1,w
  3434  012B  00F6               	movwf	___awdiv@dividend+1
  3435  012C  3184  2430  3180   	fcall	___awdiv
  3436  012F  0873               	movf	?___awdiv,w
  3437  0130  0020               	movlb	0	; select bank0
  3438  0131  00CB               	movwf	??_make_data+2
  3439  0132  084E               	movf	make_data@mki,w
  3440  0133  00CC               	movwf	??_make_data+3
  3441  0134  3001               	movlw	1
  3442  0135                     u1995:	
  3443  0135  35CC               	lslf	??_make_data+3,f
  3444  0136  3EFF               	addlw	-1
  3445  0137  1D03               	skipz
  3446  0138  2935               	goto	u1995
  3447  0139  354C               	lslf	??_make_data+3,w
  3448  013A  3E06               	addlw	6
  3449  013B  3EA0               	addlw	(low (_led_data| 0))& (0+255)
  3450  013C  0086               	movwf	6
  3451  013D  0187               	clrf	7
  3452  013E  084B               	movf	??_make_data+2,w
  3453  013F  0081               	movwf	1
  3454                           
  3455                           ;LED_APA102.c: 123: led_data[7 + mki*4] = rcl/3;
  3456  0140  3003               	movlw	3
  3457  0141  00F3               	movwf	___awdiv@divisor
  3458  0142  3000               	movlw	0
  3459  0143  00F4               	movwf	___awdiv@divisor+1
  3460  0144  0878               	movf	make_data@rcl,w
  3461  0145  00C9               	movwf	??_make_data
  3462  0146  01CA               	clrf	??_make_data+1
  3463  0147  0849               	movf	??_make_data,w
  3464  0148  00F5               	movwf	___awdiv@dividend
  3465  0149  084A               	movf	??_make_data+1,w
  3466  014A  00F6               	movwf	___awdiv@dividend+1
  3467  014B  3184  2430  3180   	fcall	___awdiv
  3468  014E  0873               	movf	?___awdiv,w
  3469  014F  0020               	movlb	0	; select bank0
  3470  0150  00CB               	movwf	??_make_data+2
  3471  0151  084E               	movf	make_data@mki,w
  3472  0152  00CC               	movwf	??_make_data+3
  3473  0153  3001               	movlw	1
  3474  0154                     u2005:	
  3475  0154  35CC               	lslf	??_make_data+3,f
  3476  0155  3EFF               	addlw	-1
  3477  0156  1D03               	skipz
  3478  0157  2954               	goto	u2005
  3479  0158                     L10:	
  3480  0158  354C               	lslf	??_make_data+3,w
  3481  0159  3E07               	addlw	7
  3482  015A  3EA0               	addlw	(low (_led_data| 0))& (0+255)
  3483  015B  0086               	movwf	6
  3484  015C  0187               	clrf	7
  3485  015D  084B               	movf	??_make_data+2,w
  3486  015E  298E               	goto	L11
  3487  015F                     l1900:	
  3488                           ;LED_APA102.c: 124: }
  3489                           
  3490                           
  3491                           ;LED_APA102.c: 125: else
  3492                           ;LED_APA102.c: 126: {
  3493                           ;LED_APA102.c: 127: led_data[5 + mki*4] = bcl;
  3494  015F  087A               	movf	make_data@bcl,w
  3495  0160  00C9               	movwf	??_make_data
  3496  0161  084E               	movf	make_data@mki,w
  3497  0162  00CA               	movwf	??_make_data+1
  3498  0163  3001               	movlw	1
  3499  0164                     u2015:	
  3500  0164  35CA               	lslf	??_make_data+1,f
  3501  0165  3EFF               	addlw	-1
  3502  0166  1D03               	skipz
  3503  0167  2964               	goto	u2015
  3504  0168  354A               	lslf	??_make_data+1,w
  3505  0169  3E05               	addlw	5
  3506  016A  3EA0               	addlw	(low (_led_data| 0))& (0+255)
  3507  016B  0086               	movwf	6
  3508  016C  0187               	clrf	7
  3509  016D  0849               	movf	??_make_data,w
  3510  016E  0081               	movwf	1
  3511                           
  3512                           ;LED_APA102.c: 128: led_data[6 + mki*4] = gcl;
  3513  016F  0879               	movf	make_data@gcl,w
  3514  0170  00C9               	movwf	??_make_data
  3515  0171  084E               	movf	make_data@mki,w
  3516  0172  00CA               	movwf	??_make_data+1
  3517  0173  3001               	movlw	1
  3518  0174                     u2025:	
  3519  0174  35CA               	lslf	??_make_data+1,f
  3520  0175  3EFF               	addlw	-1
  3521  0176  1D03               	skipz
  3522  0177  2974               	goto	u2025
  3523  0178  354A               	lslf	??_make_data+1,w
  3524  0179  3E06               	addlw	6
  3525  017A  3EA0               	addlw	(low (_led_data| 0))& (0+255)
  3526  017B  0086               	movwf	6
  3527  017C  0187               	clrf	7
  3528  017D  0849               	movf	??_make_data,w
  3529  017E  0081               	movwf	1
  3530                           
  3531                           ;LED_APA102.c: 129: led_data[7 + mki*4] = rcl;
  3532  017F  0878               	movf	make_data@rcl,w
  3533  0180  00C9               	movwf	??_make_data
  3534  0181  084E               	movf	make_data@mki,w
  3535  0182  00CA               	movwf	??_make_data+1
  3536  0183  3001               	movlw	1
  3537  0184                     u2035:	
  3538  0184  35CA               	lslf	??_make_data+1,f
  3539  0185  3EFF               	addlw	-1
  3540  0186  1D03               	skipz
  3541  0187  2984               	goto	u2035
  3542  0188  354A               	lslf	??_make_data+1,w
  3543  0189  3E07               	addlw	7
  3544  018A  3EA0               	addlw	(low (_led_data| 0))& (0+255)
  3545  018B  0086               	movwf	6
  3546  018C  0187               	clrf	7
  3547  018D  0849               	movf	??_make_data,w
  3548  018E                     L11:	
  3549  018E  0081               	movwf	1
  3550  018F  3001               	movlw	1
  3551  0190  00C9               	movwf	??_make_data
  3552  0191  0849               	movf	??_make_data,w
  3553  0192  07CE               	addwf	make_data@mki,f
  3554  0193  286F               	goto	L12
  3555  0194                     __end_of_make_data:	
  3556                           
  3557                           	psect	text16
  3558  0430                     __ptext16:	
  3559 ;; *************** function ___awdiv *****************
  3560 ;; Defined at:
  3561 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\awdiv.c"
  3562 ;; Parameters:    Size  Location     Type
  3563 ;;  divisor         2    3[COMMON] int 
  3564 ;;  dividend        2    5[COMMON] int 
  3565 ;; Auto vars:     Size  Location     Type
  3566 ;;  quotient        2    2[BANK0 ] int 
  3567 ;;  sign            1    1[BANK0 ] unsigned char 
  3568 ;;  counter         1    0[BANK0 ] unsigned char 
  3569 ;; Return value:  Size  Location     Type
  3570 ;;                  2    3[COMMON] int 
  3571 ;; Registers used:
  3572 ;;		wreg, status,2, status,0
  3573 ;; Tracked objects:
  3574 ;;		On entry : 0/0
  3575 ;;		On exit  : 0/0
  3576 ;;		Unchanged: 0/0
  3577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3578 ;;      Params:         4       0       0       0
  3579 ;;      Locals:         0       4       0       0
  3580 ;;      Temps:          1       0       0       0
  3581 ;;      Totals:         5       4       0       0
  3582 ;;Total ram usage:        9 bytes
  3583 ;; Hardware stack levels used:    1
  3584 ;; Hardware stack levels required when called:    1
  3585 ;; This function calls:
  3586 ;;		Nothing
  3587 ;; This function is called by:
  3588 ;;		_make_data
  3589 ;; This function uses a non-reentrant model
  3590 ;;
  3591                           
  3592                           
  3593                           ;psect for function ___awdiv
  3594  0430                     ___awdiv:	
  3595                           
  3596                           ;incstack = 0
  3597                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3598  0430  0020               	movlb	0	; select bank0
  3599  0431  01C6               	clrf	___awdiv@sign
  3600  0432  1FF4               	btfss	___awdiv@divisor+1,7
  3601  0433  2C3B               	goto	l1798
  3602  0434  09F3               	comf	___awdiv@divisor,f
  3603  0435  09F4               	comf	___awdiv@divisor+1,f
  3604  0436  0AF3               	incf	___awdiv@divisor,f
  3605  0437  1903               	skipnz
  3606  0438  0AF4               	incf	___awdiv@divisor+1,f
  3607  0439  01C6               	clrf	___awdiv@sign
  3608  043A  0AC6               	incf	___awdiv@sign,f
  3609  043B                     l1798:	
  3610  043B  1FF6               	btfss	___awdiv@dividend+1,7
  3611  043C  2C46               	goto	l1804
  3612  043D  09F5               	comf	___awdiv@dividend,f
  3613  043E  09F6               	comf	___awdiv@dividend+1,f
  3614  043F  0AF5               	incf	___awdiv@dividend,f
  3615  0440  1903               	skipnz
  3616  0441  0AF6               	incf	___awdiv@dividend+1,f
  3617  0442  3001               	movlw	1
  3618  0443  00F7               	movwf	??___awdiv
  3619  0444  0877               	movf	??___awdiv,w
  3620  0445  06C6               	xorwf	___awdiv@sign,f
  3621  0446                     l1804:	
  3622  0446  01C7               	clrf	___awdiv@quotient
  3623  0447  01C8               	clrf	___awdiv@quotient+1
  3624  0448  0873               	movf	___awdiv@divisor,w
  3625  0449  0474               	iorwf	___awdiv@divisor+1,w
  3626  044A  1903               	btfsc	3,2
  3627  044B  2C75               	goto	l1826
  3628  044C  01C5               	clrf	___awdiv@counter
  3629  044D  0AC5               	incf	___awdiv@counter,f
  3630  044E                     l1814:	
  3631  044E  1BF4               	btfsc	___awdiv@divisor+1,7
  3632  044F  2C5A               	goto	l1816
  3633  0450  3001               	movlw	1
  3634  0451                     u1725:	
  3635  0451  35F3               	lslf	___awdiv@divisor,f
  3636  0452  0DF4               	rlf	___awdiv@divisor+1,f
  3637  0453  0B89               	decfsz	9,f
  3638  0454  2C51               	goto	u1725
  3639  0455  3001               	movlw	1
  3640  0456  00F7               	movwf	??___awdiv
  3641  0457  0877               	movf	??___awdiv,w
  3642  0458  07C5               	addwf	___awdiv@counter,f
  3643  0459  2C4E               	goto	l1814
  3644  045A                     l1816:	
  3645  045A  3001               	movlw	1
  3646  045B                     u1745:	
  3647  045B  35C7               	lslf	___awdiv@quotient,f
  3648  045C  0DC8               	rlf	___awdiv@quotient+1,f
  3649  045D  0B89               	decfsz	9,f
  3650  045E  2C5B               	goto	u1745
  3651  045F  0874               	movf	___awdiv@divisor+1,w
  3652  0460  0276               	subwf	___awdiv@dividend+1,w
  3653  0461  1D03               	skipz
  3654  0462  2C65               	goto	u1755
  3655  0463  0873               	movf	___awdiv@divisor,w
  3656  0464  0275               	subwf	___awdiv@dividend,w
  3657  0465                     u1755:	
  3658  0465  1C03               	skipc
  3659  0466  2C6C               	goto	l1822
  3660  0467  0873               	movf	___awdiv@divisor,w
  3661  0468  02F5               	subwf	___awdiv@dividend,f
  3662  0469  0874               	movf	___awdiv@divisor+1,w
  3663  046A  3BF6               	subwfb	___awdiv@dividend+1,f
  3664  046B  1447               	bsf	___awdiv@quotient,0
  3665  046C                     l1822:	
  3666  046C  3001               	movlw	1
  3667  046D                     u1765:	
  3668  046D  36F4               	lsrf	___awdiv@divisor+1,f
  3669  046E  0CF3               	rrf	___awdiv@divisor,f
  3670  046F  0B89               	decfsz	9,f
  3671  0470  2C6D               	goto	u1765
  3672  0471  3001               	movlw	1
  3673  0472  02C5               	subwf	___awdiv@counter,f
  3674  0473  1D03               	btfss	3,2
  3675  0474  2C5A               	goto	l1816
  3676  0475                     l1826:	
  3677  0475  0846               	movf	___awdiv@sign,w
  3678  0476  1903               	btfsc	3,2
  3679  0477  2C7D               	goto	l1830
  3680  0478  09C7               	comf	___awdiv@quotient,f
  3681  0479  09C8               	comf	___awdiv@quotient+1,f
  3682  047A  0AC7               	incf	___awdiv@quotient,f
  3683  047B  1903               	skipnz
  3684  047C  0AC8               	incf	___awdiv@quotient+1,f
  3685  047D                     l1830:	
  3686  047D  0848               	movf	___awdiv@quotient+1,w
  3687  047E  00F4               	movwf	?___awdiv+1
  3688  047F  0847               	movf	___awdiv@quotient,w
  3689  0480  00F3               	movwf	?___awdiv
  3690  0481  0008               	return
  3691  0482                     __end_of___awdiv:	
  3692                           
  3693                           	psect	text17
  3694  05D1                     __ptext17:	
  3695 ;; *************** function _led_display *****************
  3696 ;; Defined at:
  3697 ;;		line 134 in file "LED_APA102.c"
  3698 ;; Parameters:    Size  Location     Type
  3699 ;;		None
  3700 ;; Auto vars:     Size  Location     Type
  3701 ;;  dsi             1    8[COMMON] unsigned char 
  3702 ;; Return value:  Size  Location     Type
  3703 ;;                  1    wreg      void 
  3704 ;; Registers used:
  3705 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3706 ;; Tracked objects:
  3707 ;;		On entry : 0/0
  3708 ;;		On exit  : 0/0
  3709 ;;		Unchanged: 0/0
  3710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3711 ;;      Params:         0       0       0       0
  3712 ;;      Locals:         1       0       0       0
  3713 ;;      Temps:          1       0       0       0
  3714 ;;      Totals:         2       0       0       0
  3715 ;;Total ram usage:        2 bytes
  3716 ;; Hardware stack levels used:    1
  3717 ;; Hardware stack levels required when called:    2
  3718 ;; This function calls:
  3719 ;;		_output_spi
  3720 ;; This function is called by:
  3721 ;;		_led_init
  3722 ;;		_DispFlowLight
  3723 ;;		_DispStandByLight
  3724 ;;		_DispLEDFix_LightRed
  3725 ;;		_DispRainBowLight
  3726 ;;		_DispSingleLED_On
  3727 ;;		_DispLEDFix_LightGreen
  3728 ;;		_DispLEDFix_LightBlue
  3729 ;;		_DispHazardLight
  3730 ;; This function uses a non-reentrant model
  3731 ;;
  3732                           
  3733                           
  3734                           ;psect for function _led_display
  3735  05D1                     _led_display:	
  3736                           
  3737                           ;LED_APA102.c: 136: unsigned char dsi;
  3738                           ;LED_APA102.c: 137: for(dsi = 0; dsi < (4*(17+1)) ; dsi++)
  3739                           
  3740                           ;incstack = 0
  3741                           ; Regs used in _led_display: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3742  05D1  01F8               	clrf	led_display@dsi
  3743  05D2                     L13:	
  3744  05D2  3048               	movlw	72
  3745  05D3  0278               	subwf	led_display@dsi,w
  3746  05D4  1803               	btfsc	3,0
  3747  05D5  0008               	return
  3748                           
  3749                           ;LED_APA102.c: 138: {
  3750                           ;LED_APA102.c: 139: output_spi(led_data[dsi]);
  3751  05D6  0878               	movf	led_display@dsi,w
  3752  05D7  3EA0               	addlw	(low (_led_data| 0))& (0+255)
  3753  05D8  0086               	movwf	6
  3754  05D9  0187               	clrf	7
  3755  05DA  0801               	movf	1,w
  3756  05DB  3183  23D8  3185   	fcall	_output_spi
  3757  05DE  3001               	movlw	1
  3758  05DF  00F7               	movwf	??_led_display
  3759  05E0  0877               	movf	??_led_display,w
  3760  05E1  07F8               	addwf	led_display@dsi,f
  3761  05E2  2DD2               	goto	L13
  3762  05E3                     __end_of_led_display:	
  3763                           
  3764                           	psect	text18
  3765  03D8                     __ptext18:	
  3766 ;; *************** function _output_spi *****************
  3767 ;; Defined at:
  3768 ;;		line 7 in file "LED_APA102.c"
  3769 ;; Parameters:    Size  Location     Type
  3770 ;;  vl              1    wreg     unsigned char 
  3771 ;; Auto vars:     Size  Location     Type
  3772 ;;  vl              1    5[COMMON] unsigned char 
  3773 ;;  vl_tmp          1    6[COMMON] unsigned char 
  3774 ;;  bitv            1    4[COMMON] unsigned char 
  3775 ;; Return value:  Size  Location     Type
  3776 ;;                  1    wreg      void 
  3777 ;; Registers used:
  3778 ;;		wreg
  3779 ;; Tracked objects:
  3780 ;;		On entry : 0/0
  3781 ;;		On exit  : 0/0
  3782 ;;		Unchanged: 0/0
  3783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3784 ;;      Params:         0       0       0       0
  3785 ;;      Locals:         3       0       0       0
  3786 ;;      Temps:          1       0       0       0
  3787 ;;      Totals:         4       0       0       0
  3788 ;;Total ram usage:        4 bytes
  3789 ;; Hardware stack levels used:    1
  3790 ;; Hardware stack levels required when called:    1
  3791 ;; This function calls:
  3792 ;;		Nothing
  3793 ;; This function is called by:
  3794 ;;		_led_display
  3795 ;; This function uses a non-reentrant model
  3796 ;;
  3797                           
  3798                           
  3799                           ;psect for function _output_spi
  3800  03D8                     _output_spi:	
  3801                           
  3802                           ;incstack = 0
  3803                           ; Regs used in _output_spi: [wreg]
  3804                           ;output_spi@vl stored from wreg
  3805  03D8  00F5               	movwf	output_spi@vl
  3806                           
  3807                           ;LED_APA102.c: 10: unsigned char vl_tmp,bitv;
  3808                           ;LED_APA102.c: 11: vl_tmp = vl;
  3809  03D9  0875               	movf	output_spi@vl,w
  3810  03DA  00F3               	movwf	??_output_spi
  3811  03DB  0873               	movf	??_output_spi,w
  3812  03DC  00F6               	movwf	output_spi@vl_tmp
  3813                           
  3814                           ;LED_APA102.c: 12: bitv = 0x80;
  3815  03DD  3080               	movlw	128
  3816  03DE  00F3               	movwf	??_output_spi
  3817  03DF  0873               	movf	??_output_spi,w
  3818  03E0  00F4               	movwf	output_spi@bitv
  3819                           
  3820                           ;LED_APA102.c: 13: LATCbits.LATC0 = 1;
  3821  03E1  0022               	movlb	2	; select bank2
  3822  03E2  140E               	bsf	14,0	;volatile
  3823                           
  3824                           ;LED_APA102.c: 14: if((vl_tmp & 0x80) == 0x80) LATAbits.LATA4 = 0;
  3825  03E3  1FF6               	btfss	output_spi@vl_tmp,7
  3826  03E4  2BE7               	goto	l250
  3827  03E5  120C               	bcf	12,4	;volatile
  3828  03E6  2BE8               	goto	l251
  3829  03E7                     l250:	
  3830                           
  3831                           ;LED_APA102.c: 15: else LATAbits.LATA4 = 1;
  3832  03E7  160C               	bsf	12,4	;volatile
  3833  03E8                     l251:	
  3834                           
  3835                           ;LED_APA102.c: 16: LATCbits.LATC0 = 0;
  3836  03E8  100E               	bcf	14,0	;volatile
  3837                           
  3838                           ;LED_APA102.c: 17: __nop();__nop();
  3839  03E9  0000               	nop
  3840  03EA  0000               	nop
  3841                           
  3842                           ;LED_APA102.c: 19: LATCbits.LATC0 = 1;
  3843  03EB  0022               	movlb	2	; select bank2
  3844  03EC  140E               	bsf	14,0	;volatile
  3845                           
  3846                           ;LED_APA102.c: 20: if((vl_tmp & 0x40) == 0x40) LATAbits.LATA4 = 0;
  3847  03ED  1F76               	btfss	output_spi@vl_tmp,6
  3848  03EE  2BF1               	goto	l252
  3849  03EF  120C               	bcf	12,4	;volatile
  3850  03F0  2BF2               	goto	l253
  3851  03F1                     l252:	
  3852                           
  3853                           ;LED_APA102.c: 21: else LATAbits.LATA4 = 1;
  3854  03F1  160C               	bsf	12,4	;volatile
  3855  03F2                     l253:	
  3856                           
  3857                           ;LED_APA102.c: 22: LATCbits.LATC0 = 0;
  3858  03F2  100E               	bcf	14,0	;volatile
  3859                           
  3860                           ;LED_APA102.c: 23: __nop();__nop();
  3861  03F3  0000               	nop
  3862  03F4  0000               	nop
  3863                           
  3864                           ;LED_APA102.c: 25: LATCbits.LATC0 = 1;
  3865  03F5  0022               	movlb	2	; select bank2
  3866  03F6  140E               	bsf	14,0	;volatile
  3867                           
  3868                           ;LED_APA102.c: 26: if((vl_tmp & 0x20) == 0x20) LATAbits.LATA4 = 0;
  3869  03F7  1EF6               	btfss	output_spi@vl_tmp,5
  3870  03F8  2BFB               	goto	l254
  3871  03F9  120C               	bcf	12,4	;volatile
  3872  03FA  2BFC               	goto	l255
  3873  03FB                     l254:	
  3874                           
  3875                           ;LED_APA102.c: 27: else LATAbits.LATA4 = 1;
  3876  03FB  160C               	bsf	12,4	;volatile
  3877  03FC                     l255:	
  3878                           
  3879                           ;LED_APA102.c: 28: LATCbits.LATC0 = 0;
  3880  03FC  100E               	bcf	14,0	;volatile
  3881                           
  3882                           ;LED_APA102.c: 29: __nop();__nop();
  3883  03FD  0000               	nop
  3884  03FE  0000               	nop
  3885                           
  3886                           ;LED_APA102.c: 31: LATCbits.LATC0 = 1;
  3887  03FF  0022               	movlb	2	; select bank2
  3888  0400  140E               	bsf	14,0	;volatile
  3889                           
  3890                           ;LED_APA102.c: 32: if((vl_tmp & 0x10) == 0x10) LATAbits.LATA4 = 0;
  3891  0401  1E76               	btfss	output_spi@vl_tmp,4
  3892  0402  2C05               	goto	l256
  3893  0403  120C               	bcf	12,4	;volatile
  3894  0404  2C06               	goto	l257
  3895  0405                     l256:	
  3896                           
  3897                           ;LED_APA102.c: 33: else LATAbits.LATA4 = 1;
  3898  0405  160C               	bsf	12,4	;volatile
  3899  0406                     l257:	
  3900                           
  3901                           ;LED_APA102.c: 34: LATCbits.LATC0 = 0;
  3902  0406  100E               	bcf	14,0	;volatile
  3903                           
  3904                           ;LED_APA102.c: 35: __nop();__nop();
  3905  0407  0000               	nop
  3906  0408  0000               	nop
  3907                           
  3908                           ;LED_APA102.c: 37: LATCbits.LATC0 = 1;
  3909  0409  0022               	movlb	2	; select bank2
  3910  040A  140E               	bsf	14,0	;volatile
  3911                           
  3912                           ;LED_APA102.c: 38: if((vl_tmp & 0x08) == 0x08) LATAbits.LATA4 = 0;
  3913  040B  1DF6               	btfss	output_spi@vl_tmp,3
  3914  040C  2C0F               	goto	l258
  3915  040D  120C               	bcf	12,4	;volatile
  3916  040E  2C10               	goto	l259
  3917  040F                     l258:	
  3918                           
  3919                           ;LED_APA102.c: 39: else LATAbits.LATA4 = 1;
  3920  040F  160C               	bsf	12,4	;volatile
  3921  0410                     l259:	
  3922                           
  3923                           ;LED_APA102.c: 40: LATCbits.LATC0 = 0;
  3924  0410  100E               	bcf	14,0	;volatile
  3925                           
  3926                           ;LED_APA102.c: 41: __nop();__nop();
  3927  0411  0000               	nop
  3928  0412  0000               	nop
  3929                           
  3930                           ;LED_APA102.c: 43: LATCbits.LATC0 = 1;
  3931  0413  0022               	movlb	2	; select bank2
  3932  0414  140E               	bsf	14,0	;volatile
  3933                           
  3934                           ;LED_APA102.c: 44: if((vl_tmp & 0x04) == 0x04) LATAbits.LATA4 = 0;
  3935  0415  1D76               	btfss	output_spi@vl_tmp,2
  3936  0416  2C19               	goto	l260
  3937  0417  120C               	bcf	12,4	;volatile
  3938  0418  2C1A               	goto	l261
  3939  0419                     l260:	
  3940                           
  3941                           ;LED_APA102.c: 45: else LATAbits.LATA4 = 1;
  3942  0419  160C               	bsf	12,4	;volatile
  3943  041A                     l261:	
  3944                           
  3945                           ;LED_APA102.c: 46: LATCbits.LATC0 = 0;
  3946  041A  100E               	bcf	14,0	;volatile
  3947                           
  3948                           ;LED_APA102.c: 47: __nop();__nop();
  3949  041B  0000               	nop
  3950  041C  0000               	nop
  3951                           
  3952                           ;LED_APA102.c: 49: LATCbits.LATC0 = 1;
  3953  041D  0022               	movlb	2	; select bank2
  3954  041E  140E               	bsf	14,0	;volatile
  3955                           
  3956                           ;LED_APA102.c: 50: if((vl_tmp & 0x02) == 0x02) LATAbits.LATA4 = 0;
  3957  041F  1CF6               	btfss	output_spi@vl_tmp,1
  3958  0420  2C23               	goto	l262
  3959  0421  120C               	bcf	12,4	;volatile
  3960  0422  2C24               	goto	l263
  3961  0423                     l262:	
  3962                           
  3963                           ;LED_APA102.c: 51: else LATAbits.LATA4 = 1;
  3964  0423  160C               	bsf	12,4	;volatile
  3965  0424                     l263:	
  3966                           
  3967                           ;LED_APA102.c: 52: LATCbits.LATC0 = 0;
  3968  0424  100E               	bcf	14,0	;volatile
  3969                           
  3970                           ;LED_APA102.c: 53: __nop();__nop();
  3971  0425  0000               	nop
  3972  0426  0000               	nop
  3973                           
  3974                           ;LED_APA102.c: 55: LATCbits.LATC0 = 1;
  3975  0427  0022               	movlb	2	; select bank2
  3976  0428  140E               	bsf	14,0	;volatile
  3977                           
  3978                           ;LED_APA102.c: 56: if((vl_tmp & 0x01) == 0x01) LATAbits.LATA4 = 0;
  3979  0429  1C76               	btfss	output_spi@vl_tmp,0
  3980  042A  2C2D               	goto	l264
  3981  042B  120C               	bcf	12,4	;volatile
  3982  042C  2C2E               	goto	l265
  3983  042D                     l264:	
  3984                           
  3985                           ;LED_APA102.c: 57: else LATAbits.LATA4 = 1;
  3986  042D  160C               	bsf	12,4	;volatile
  3987  042E                     l265:	
  3988                           
  3989                           ;LED_APA102.c: 58: LATCbits.LATC0 = 0;
  3990  042E  100E               	bcf	14,0	;volatile
  3991  042F  0008               	return
  3992  0430                     __end_of_output_spi:	
  3993                           
  3994                           	psect	text19
  3995  050C                     __ptext19:	
  3996 ;; *************** function _delay_ms *****************
  3997 ;; Defined at:
  3998 ;;		line 7 in file "main.c"
  3999 ;; Parameters:    Size  Location     Type
  4000 ;;  mscnt           2    3[COMMON] unsigned int 
  4001 ;; Auto vars:     Size  Location     Type
  4002 ;;  j               2    7[COMMON] unsigned int 
  4003 ;;  i               2    5[COMMON] unsigned int 
  4004 ;; Return value:  Size  Location     Type
  4005 ;;                  1    wreg      void 
  4006 ;; Registers used:
  4007 ;;		wreg, status,2
  4008 ;; Tracked objects:
  4009 ;;		On entry : 0/0
  4010 ;;		On exit  : 0/0
  4011 ;;		Unchanged: 0/0
  4012 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4013 ;;      Params:         2       0       0       0
  4014 ;;      Locals:         4       0       0       0
  4015 ;;      Temps:          0       0       0       0
  4016 ;;      Totals:         6       0       0       0
  4017 ;;Total ram usage:        6 bytes
  4018 ;; Hardware stack levels used:    1
  4019 ;; Hardware stack levels required when called:    1
  4020 ;; This function calls:
  4021 ;;		Nothing
  4022 ;; This function is called by:
  4023 ;;		_APA102Leds_Splash
  4024 ;;		_Bike_ButtonProcess
  4025 ;;		_main
  4026 ;;		_DispFlowLight
  4027 ;;		_Scan_Button
  4028 ;;		_UART_WRSTR
  4029 ;;		_Wait_RightFor40s
  4030 ;;		_Wait_BrakeRightFor40s
  4031 ;;		_DispRainBowLight
  4032 ;; This function uses a non-reentrant model
  4033 ;;
  4034                           
  4035                           
  4036                           ;psect for function _delay_ms
  4037  050C                     _delay_ms:	
  4038                           
  4039                           ;main.c: 9: unsigned int i;
  4040                           ;main.c: 10: unsigned int j;
  4041                           ;main.c: 11: for (i=0;i<mscnt;i++)
  4042                           
  4043                           ;incstack = 0
  4044                           ; Regs used in _delay_ms: [wreg+status,2]
  4045  050C  01F5               	clrf	delay_ms@i
  4046  050D  01F6               	clrf	delay_ms@i+1
  4047  050E                     l103:	
  4048  050E  0874               	movf	delay_ms@mscnt+1,w
  4049  050F  0276               	subwf	delay_ms@i+1,w
  4050  0510  1D03               	skipz
  4051  0511  2D14               	goto	u1815
  4052  0512  0873               	movf	delay_ms@mscnt,w
  4053  0513  0275               	subwf	delay_ms@i,w
  4054  0514                     u1815:	
  4055  0514  1803               	btfsc	3,0
  4056  0515  0008               	return
  4057                           
  4058                           ;main.c: 12: for(j=0;j<170;j++)
  4059  0516  01F7               	clrf	delay_ms@j
  4060  0517  01F8               	clrf	delay_ms@j+1
  4061  0518  3000               	movlw	0
  4062  0519  0278               	subwf	delay_ms@j+1,w
  4063  051A  30AA               	movlw	170
  4064  051B  1903               	skipnz
  4065  051C  0277               	subwf	delay_ms@j,w
  4066  051D  1803               	btfsc	3,0
  4067  051E  2D2A               	goto	l1844
  4068  051F                     l1842:	
  4069                           
  4070                           ;main.c: 13: {
  4071  051F  3001               	movlw	1
  4072  0520  07F7               	addwf	delay_ms@j,f
  4073  0521  3000               	movlw	0
  4074  0522  3DF8               	addwfc	delay_ms@j+1,f
  4075  0523  3000               	movlw	0
  4076  0524  0278               	subwf	delay_ms@j+1,w
  4077  0525  30AA               	movlw	170
  4078  0526  1903               	skipnz
  4079  0527  0277               	subwf	delay_ms@j,w
  4080  0528  1C03               	skipc
  4081  0529  2D1F               	goto	l1842
  4082  052A                     l1844:	
  4083  052A  3001               	movlw	1
  4084  052B  07F5               	addwf	delay_ms@i,f
  4085  052C  3000               	movlw	0
  4086  052D  3DF6               	addwfc	delay_ms@i+1,f
  4087  052E  2D0E               	goto	l103
  4088  052F                     __end_of_delay_ms:	
  4089                           
  4090                           	psect	intentry
  4091  0004                     __pintentry:	
  4092 ;; *************** function _High_isr *****************
  4093 ;; Defined at:
  4094 ;;		line 71 in file "main.c"
  4095 ;; Parameters:    Size  Location     Type
  4096 ;;		None
  4097 ;; Auto vars:     Size  Location     Type
  4098 ;;  RXCheck         1    2[COMMON] unsigned char 
  4099 ;; Return value:  Size  Location     Type
  4100 ;;                  1    wreg      void 
  4101 ;; Registers used:
  4102 ;;		wreg, status,2, status,0
  4103 ;; Tracked objects:
  4104 ;;		On entry : 0/0
  4105 ;;		On exit  : 0/0
  4106 ;;		Unchanged: 0/0
  4107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4108 ;;      Params:         0       0       0       0
  4109 ;;      Locals:         1       0       0       0
  4110 ;;      Temps:          2       0       0       0
  4111 ;;      Totals:         3       0       0       0
  4112 ;;Total ram usage:        3 bytes
  4113 ;; Hardware stack levels used:    1
  4114 ;; This function calls:
  4115 ;;		Nothing
  4116 ;; This function is called by:
  4117 ;;		Interrupt level 1
  4118 ;; This function uses a non-reentrant model
  4119 ;;
  4120                           
  4121  0004                     _High_isr:	
  4122                           
  4123                           ;incstack = 0
  4124  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  4125                           
  4126                           ; Regs used in _High_isr: [wreg+status,2+status,0]
  4127  0005  3180               	pagesel	$
  4128  0006  0020               	movlb	0	; select bank0
  4129  0007  087F               	movf	127,w
  4130  0008  00F1               	movwf	??_High_isr+1
  4131                           
  4132                           ;main.c: 73: unsigned char RXCheck;
  4133                           ;main.c: 75: if (RCIF & RCIE)
  4134  0009  3001               	movlw	1
  4135  000A  1E91               	btfss	17,5	;volatile
  4136  000B  3900               	andlw	0
  4137  000C  0021               	movlb	1	; select bank1
  4138  000D  1E91               	btfss	17,5	;volatile
  4139  000E  3900               	andlw	0
  4140  000F  1C09               	btfss	9,0
  4141  0010  2849               	goto	i1l136
  4142                           
  4143                           ;main.c: 76: {
  4144                           ;main.c: 77: RCIE = 0;
  4145  0011  1291               	bcf	17,5	;volatile
  4146                           
  4147                           ;main.c: 78: RCIF = 0;
  4148  0012  0020               	movlb	0	; select bank0
  4149  0013  1291               	bcf	17,5	;volatile
  4150                           
  4151                           ;main.c: 79: RXCheck = RCREG;
  4152  0014  0023               	movlb	3	; select bank3
  4153  0015  0819               	movf	25,w	;volatile
  4154  0016  00F0               	movwf	??_High_isr
  4155  0017  0870               	movf	??_High_isr,w
  4156  0018  00F2               	movwf	High_isr@RXCheck
  4157                           
  4158                           ;main.c: 80: if(OERR){OERR = 0;CREN=0;CREN=1;}
  4159  0019  1C9D               	btfss	29,1	;volatile
  4160  001A  281E               	goto	i1l2236
  4161  001B  109D               	bcf	29,1	;volatile
  4162  001C  121D               	bcf	29,4	;volatile
  4163  001D  161D               	bsf	29,4	;volatile
  4164  001E                     i1l2236:	
  4165                           
  4166                           ;main.c: 82: if(NewF==0)
  4167  001E  087C               	movf	_NewF,w
  4168  001F  1D03               	btfss	3,2
  4169  0020  2836               	goto	i1l2250
  4170                           
  4171                           ;main.c: 83: {
  4172                           ;main.c: 84: if(RXCheck == 0xAA)
  4173  0021  30AA               	movlw	170
  4174  0022  0672               	xorwf	High_isr@RXCheck,w
  4175  0023  1D03               	btfss	3,2
  4176  0024  282A               	goto	i1l2242
  4177                           
  4178                           ;main.c: 85: AAcnt++;
  4179  0025  3001               	movlw	1
  4180  0026  00F0               	movwf	??_High_isr
  4181  0027  0870               	movf	??_High_isr,w
  4182  0028  07FD               	addwf	_AAcnt,f
  4183  0029  2847               	goto	i1l2260
  4184  002A                     i1l2242:	
  4185                           
  4186                           ;main.c: 86: else
  4187                           ;main.c: 87: {
  4188                           ;main.c: 88: if((RXCheck == 0xA5)&(AAcnt>3))
  4189  002A  30A5               	movlw	165
  4190  002B  0672               	xorwf	High_isr@RXCheck,w
  4191  002C  1D03               	btfss	3,2
  4192  002D  2834               	goto	i1l2248
  4193  002E  3004               	movlw	4
  4194  002F  027D               	subwf	_AAcnt,w
  4195  0030  1C03               	skipc
  4196  0031  2834               	goto	i1l2248
  4197                           
  4198                           ;main.c: 89: NewF = 1;
  4199  0032  01FC               	clrf	_NewF
  4200  0033  0AFC               	incf	_NewF,f
  4201  0034                     i1l2248:	
  4202                           
  4203                           ;main.c: 90: AAcnt = 0;
  4204  0034  01FD               	clrf	_AAcnt
  4205                           
  4206                           ;main.c: 91: }
  4207                           ;main.c: 92: }
  4208  0035  2847               	goto	i1l2260
  4209  0036                     i1l2250:	
  4210                           
  4211                           ;main.c: 93: else
  4212                           ;main.c: 94: {
  4213                           ;main.c: 95: if((RXCheck>0x4F)&(RXCheck<0x5D))
  4214  0036  3050               	movlw	80
  4215  0037  0272               	subwf	High_isr@RXCheck,w
  4216  0038  1C03               	skipc
  4217  0039  2846               	goto	i1l2258
  4218  003A  305D               	movlw	93
  4219  003B  0272               	subwf	High_isr@RXCheck,w
  4220  003C  1803               	skipnc
  4221  003D  2846               	goto	i1l2258
  4222                           
  4223                           ;main.c: 96: {
  4224                           ;main.c: 97: CmdValue = RXCheck-0x50;
  4225  003E  0872               	movf	High_isr@RXCheck,w
  4226  003F  3EB0               	addlw	176
  4227  0040  00F0               	movwf	??_High_isr
  4228  0041  0870               	movf	??_High_isr,w
  4229  0042  0020               	movlb	0	; select bank0
  4230  0043  00C0               	movwf	_CmdValue
  4231                           
  4232                           ;main.c: 98: NewCmdF = 1;
  4233  0044  01C1               	clrf	_NewCmdF
  4234  0045  0AC1               	incf	_NewCmdF,f
  4235  0046                     i1l2258:	
  4236                           
  4237                           ;main.c: 99: }
  4238                           ;main.c: 100: NewF = 0;
  4239  0046  01FC               	clrf	_NewF
  4240  0047                     i1l2260:	
  4241                           
  4242                           ;main.c: 101: }
  4243                           ;main.c: 102: RCIE = 1;
  4244  0047  0021               	movlb	1	; select bank1
  4245  0048  1691               	bsf	17,5	;volatile
  4246  0049                     i1l136:	
  4247  0049  0871               	movf	??_High_isr+1,w
  4248  004A  0020               	movlb	0	; select bank0
  4249  004B  00FF               	movwf	127
  4250  004C  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  4251  004D  0009               	retfie
  4252  004E                     __end_of_High_isr:	
  4253  007E                     btemp	set	126	;btemp
  4254  007E                     int$flags	set	126
  4255  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         110
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      14
    BANK0            80     21      58
    BANK1            80      0      70
    BANK2            80      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_DispStandByLight
    _Scan_Button->_delay_ms
    _Bike_ButtonProcess->_delay_ms
    _APA102Leds_Splash->_DispStandByLight
    _led_init->_make_data
    _led_init->_make_flow_patt
    _DispStandByLight->_led_display
    _DispLEDFix_LightRed->_make_data
    _DispFlowLight->_make_data
    _DispFlowLight->_make_flow_patt
    _make_flow_patt->___wmul
    _make_data->___awdiv
    _led_display->_output_spi

Critical Paths under _High_isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_APA102Leds_Splash
    _APA102Leds_Splash->_DispFlowLight
    _led_init->_make_data
    _DispLEDFix_LightRed->_make_data
    _DispFlowLight->_make_data
    _make_data->___awdiv

Critical Paths under _High_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _High_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _High_isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   27264
                                             20 BANK0      1     1      0
                  _APA102Leds_Splash
                 _Bike_ButtonProcess
                   _DispStandByLight
                          _InitGPIOS
                    _InitSystemClock
                        _Scan_Button
                           _delay_ms
                           _led_init
 ---------------------------------------------------------------------------------
 (1) _Scan_Button                                          1     1      0    1735
                                              9 COMMON     1     1      0
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _InitSystemClock                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitGPIOS                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Bike_ButtonProcess                                   3     3      0    1794
                                              9 COMMON     1     1      0
                                              0 BANK0      2     2      0
              _Rx_RightLED_StateNoti
                           _delay_ms
 ---------------------------------------------------------------------------------
 (2) _Rx_RightLED_StateNoti                                2     2      0      23
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _APA102Leds_Splash                                    1     1      0   17151
                                             19 BANK0      1     1      0
                      _DispFlowLight
                _DispLEDFix_LightRed
                   _DispStandByLight
                           _delay_ms
                           _led_init
 ---------------------------------------------------------------------------------
 (1) _led_init                                             0     0      0    4337
                        _led_display
                          _make_data
                     _make_flow_patt
 ---------------------------------------------------------------------------------
 (1) _DispStandByLight                                     3     3      0     512
                                              9 COMMON     2     2      0
                                              0 BANK0      1     1      0
                        _led_display
 ---------------------------------------------------------------------------------
 (2) _DispLEDFix_LightRed                                  1     1      0    3480
                                             10 BANK0      1     1      0
                        _led_display
                          _make_data
                      _make_fix_patt
 ---------------------------------------------------------------------------------
 (3) _make_fix_patt                                        3     3      0      90
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _DispFlowLight                                        9     7      2    7087
                                             10 BANK0      9     7      2
                           _delay_ms
                        _led_display
                          _make_data
                     _make_flow_patt
 ---------------------------------------------------------------------------------
 (2) _make_flow_patt                                       9     9      0     947
                                              9 COMMON     2     2      0
                                              0 BANK0      7     7      0
                             ___bmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     358
                                              3 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     277
                                              3 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) _make_data                                            9     6      3    3122
                                              8 COMMON     3     0      3
                                              4 BANK0      6     6      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     936
                                              3 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) _led_display                                          2     2      0     268
                                              7 COMMON     2     2      0
                         _output_spi
 ---------------------------------------------------------------------------------
 (3) _output_spi                                           4     4      0     200
                                              3 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             6     4      2    1735
                                              3 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _High_isr                                             3     3      0     111
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _APA102Leds_Splash
     _DispFlowLight
       _delay_ms
       _led_display
         _output_spi
       _make_data
         ___awdiv
       _make_flow_patt
         ___bmul
         ___wmul
     _DispLEDFix_LightRed
       _led_display
         _output_spi
       _make_data
         ___awdiv
       _make_fix_patt
     _DispStandByLight
       _led_display
         _output_spi
     _delay_ms
     _led_init
       _led_display
         _output_spi
       _make_data
         ___awdiv
       _make_flow_patt
         ___bmul
         ___wmul
   _Bike_ButtonProcess
     _Rx_RightLED_StateNoti
     _delay_ms
   _DispStandByLight
     _led_display
       _output_spi
   _InitGPIOS
   _InitSystemClock
   _Scan_Button
     _delay_ms
   _delay_ms
   _led_init
     _led_display
       _output_spi
     _make_data
       ___awdiv
     _make_flow_patt
       ___bmul
       ___wmul

 _High_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      B       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      8E       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     15      3A       6       72.5%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      46       8       87.5%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      8E      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Wed Nov 14 09:59:43 2018

                              pc 0002                   ___bmul@product 0075                     ?_led_display 0070  
                    __CFG_CP$OFF 0000                     ___awdiv@sign 0046              ___wmul@multiplicand 0075  
                            l103 050E                              l116 060A                              l250 03E7  
                            l251 03E8                              l260 0419                              l252 03F1  
                            l261 041A                              l253 03F2                              l262 0423  
                            l254 03FB                              l263 0424                              l255 03FC  
                            l264 042D                              l256 0405                              l265 042E  
                            l257 0406                              l258 040F                              l259 0410  
                            l562 0555                              l468 0398                              _GIE 005F  
                   __CFG_CPD$OFF 0000                     __CFG_BORV$LO 0000                              wreg 0009  
                           S2480 0568                             S2482 0580         __end_of_DispStandByLight 02B7  
                   __CFG_LVP$OFF 0000     __size_of_DispLEDFix_LightRed 0012                    _make_fix_patt 05AC  
                           l2100 04ED                             l2112 04ED                             l2050 02CA  
                           l2130 04ED                             l2106 04ED                             l2060 02E4  
                           l2052 02CD                             l2044 02BD                             l2124 04ED  
                           l2204 03B8                             l2062 02EE                             l2054 02D7  
                           l2142 04ED                             l2118 04ED                             l2302 04B8  
                           l2064 02F1                             l2056 02DA                             l2048 02C7  
                           l2072 030C                             l2136 04ED                             l2216 03CA  
                           l2066 02FB                             l2058 02DD                             l2154 04ED  
                           l2082 04D2                             l2162 04FB                             l2068 0302  
                           l2148 04ED                             l2164 0505                             l2094 04E0  
                           l2182 038A                             l2088 04D3                             l1804 0446  
                           l1900 015F                             l2196 03A8                             l1830 047D  
                           l1822 046C                             l1814 044E                             l1816 045A  
                           l1842 051F                             l1826 0475                             l1844 052A  
                           l1764 054F                             l1860 01CD                             l1782 05EB  
                           l1854 01A0                             l1942 026F                             l1864 01D7  
                           l1960 0333                             l1952 0326                             l1778 05E5  
                           l1858 01C8                             l1866 01E9                             l1938 0235  
                           l1892 0086                             l1876 021C                             l1964 034B  
                           l1956 032C                             l1972 036D                             l1948 02B4  
                           l1798 043B                             l1990 05A2                             l1896 00FA  
                           l1976 0374                             l1968 0361                             l1978 031C  
                           l1996 05AA                             l1988 0598                             _CREN 0CEC  
                           _FERR 0CEA                             u2005 0154                             u2015 0164  
                           u2025 0174                             u2035 0184                             u2115 023D  
                           u2125 024B                             _LATA 010C                             u2135 025A  
                           _LATC 010E                             u2145 026A                             u2155 0274  
                           u2165 0282                             u2175 0291                             u2185 02A1  
                           u1725 0451                             u1645 0556                             u1815 0514  
                           u1655 055B                             u1745 045B                             u1755 0465  
                           u1915 0081                             u1765 046D                             u1925 008D  
                           u1845 01BC                             u1945 00B5                             u1955 00D5  
                           u1875 0218                             _PEIE 005E                             u1965 00F5  
                           u1985 0116                             u1995 0135                             _RCIE 048D  
                           _RCIF 008D                             _OERR 0CE9                             _SPEN 0CEF  
                           _NewF 007C                     __CFG_WRT$OFF 0000                    __CFG_FCMEN$ON 0000  
                           _main 0482                             fsr0h 0005                             fsr1h 0007  
                           indf0 0000                             fsr0l 0004                             indf1 0001  
                           fsr1l 0006                             btemp 007E                    __CFG_BOREN$ON 0000  
                           start 004E                    __CFG_IESO$OFF 0000                ___bmul@multiplier 0076  
                          ?_main 0070                  __end_of___awdiv 0482                    __CFG_WDTE$OFF 0000  
                ___awdiv@divisor 0073                   _make_flow_patt 0194                            _AAcnt 007D  
                          i1l136 0049                  ___awdiv@counter 0045                            _RCREG 0199  
                          _TRISA 008C                            _TRISC 008E                    ??_Scan_Button 0079  
              _timer_4_countover 0043                       _Cnten_flag 0042                   ?_make_fix_patt 0070  
                          status 0003                       _FlowStateF 003F                            wtemp0 007E  
            DispStandByLight@sti 0045                   __CFG_MCLRE$OFF 0000                  __initialization 0050  
               __end_of_High_isr 004E                     __end_of_main 04CA         __size_of_InitSystemClock 000B  
         __end_of_make_flow_patt 022A                           ??_main 0059                     make_data@bcl 007A  
                   make_data@gcl 0079                     make_data@brt 004D                     make_data@mki 004E  
                   make_data@rcl 0078                   __CFG_PLLEN$OFF 0000                 ___awdiv@dividend 0075  
                         _ANSELA 018C                           _ANSELC 018E               __size_of_InitGPIOS 001E  
                         _HFIOFR 04D4                           i1l2242 002A                           i1l2250 0036  
                         i1l2260 0047                           i1l2236 001E                           i1l2248 0034  
                         i1l2258 0046              __end_of_Scan_Button 03D8                           _SPBRGH 019C  
                         _SPBRGL 019B                  High_isr@RXCheck 0072                 __end_of_delay_ms 052F  
                 __CFG_PWRTE$OFF 0000                           _NewKey 003D                           _Button 003C  
          __end_of_DispFlowLight 0379                           ___bmul 05E3                 __end_of_led_init 0602  
                         ___wmul 054D                        ??___awdiv 0077                   __CFG_STVREN$ON 0000  
                ?_make_flow_patt 0070                 ___awdiv@quotient 0047             __size_of_led_display 0012  
                ??_make_fix_patt 0073          ??_Rx_RightLED_StateNoti 0073          __end_of__initialization 0062  
            ___bmul@multiplicand 0073                   __pcstackCOMMON 0070              _DispLEDFix_LightRed 05BF  
              __end_of_InitGPIOS 054D      __size_of_Bike_ButtonProcess 0042                ??_InitSystemClock 0073  
                 _OPTION_REGbits 0095                      _Scan_Button 0379             ?_DispLEDFix_LightRed 0070  
              ?_DispStandByLight 0070                        ?_High_isr 0070               __size_of_make_data 012E  
                     __pbssBANK0 0020                       __pbssBANK1 00A0               ??_DispStandByLight 0079  
                     __pmaintext 0482                          ?___bmul 0073                          ?___wmul 0073  
                     __pintentry 0004                     output_spi@vl 0075                        ?_delay_ms 0073  
          ??_DispLEDFix_LightRed 004F                       ??_High_isr 0070                        ?_led_init 0070  
                 output_spi@bitv 0074   Bike_ButtonProcess@ProcessWindF 0046                          _NewCmdF 0041  
                    _Timer4Count 0034                  __size_of___bmul 0011                          ___awdiv 0430  
                __size_of___wmul 001B                __end_of_make_data 0194                          __ptext1 0379  
                        __ptext2 0602                          __ptext3 052F                          __ptext4 04CA  
                        __ptext5 0598                          __ptext6 02B7                          __ptext7 05F4  
                        __ptext8 022A                          __ptext9 05BF                       ??_delay_ms 0075  
                 led_display@dsi 0078                          clrloop0 060E                       ??_led_init 007B  
           end_of_initialization 0062                 ??_make_flow_patt 0045                        _RCSTAbits 019D  
                      _PORTAbits 000C                        _PORTCbits 000E               make_flow_patt@endn 0079  
             make_flow_patt@brti 007A                 __CFG_FOSC$INTOSC 0000                 _Time40S_Complete 003E  
 __size_of_Rx_RightLED_StateNoti 0014    __end_of_Rx_RightLED_StateNoti 05AC                        _TXSTAbits 019E  
                     _output_spi 03D8                 output_spi@vl_tmp 0076                  _InitSystemClock 0602  
                  ??_led_display 0077                   __end_of___bmul 05F4                   __end_of___wmul 0568  
                    _BAUDCONbits 019F                    delay_ms@mscnt 0073                        _InitGPIOS 052F  
            start_initialization 0050                     ?_Scan_Button 0070                        _OldButton 007B  
          __end_of_make_fix_patt 05BF           __size_of_DispFlowLight 0061                __size_of_High_isr 004A  
                    _APFCON0bits 011D       __end_of_Bike_ButtonProcess 050C                         ??___bmul 0074  
      __size_of_DispStandByLight 008D                         ??___wmul 0077               DispFlowLight@colrB 0050  
             DispFlowLight@colrG 004F               DispFlowLight@colrR 0056               DispFlowLight@dspti 0055  
             DispFlowLight@dsptj 0057               DispFlowLight@dsptk 0054                       ?_InitGPIOS 0070  
            __end_of_led_display 05E3                      __pbssCOMMON 007B                        ___latbits 0001  
                  __pcstackBANK0 0045                __size_of_delay_ms 0023                make_fix_patt@fbrt 0074  
              make_fix_patt@brti 0075                __size_of_led_init 000E          __end_of_InitSystemClock 060D  
                    ?_output_spi 0070                    _DispFlowLight 0318                         ?___awdiv 0073  
                      __pswtext1 0568                        __pswtext2 0580      __end_of_DispLEDFix_LightRed 05D1  
                      _make_data 0066                   ___wmul@product 0077                         _LATAbits 010C  
                       _LATCbits 010E                        delay_ms@i 0075                        delay_ms@j 0077  
                      clear_ram0 060D                   ?_DispFlowLight 004F                      _led_display 05D1  
Rx_RightLED_StateNoti@StateValue 0074                ___wmul@multiplier 0073                       ?_make_data 0078  
                    ??_InitGPIOS 0073                         _CmdValue 0040              __size_of_output_spi 0058  
           __size_of_Scan_Button 005F                         _High_isr 0004                _APA102Leds_Splash 02B7  
                       _OldState 003A                 ?_InitSystemClock 0070               ?_APA102Leds_Splash 0070  
                       _NowState 003B                 _DispStandByLight 022A              ??_APA102Leds_Splash 0058  
               __size_of___awdiv 0052                    _timer_4_count 0044                         _delay_ms 050C  
                       __ptext10 05AC                         __ptext11 0318                         __ptext12 0194  
                       __ptext13 054D                         __ptext14 05E3                         __ptext15 0066  
                       __ptext16 0430                         __ptext17 05D1                         __ptext18 03D8  
                       __ptext19 050C                         _led_data 00A0                         _led_init 05F4  
      __end_of_APA102Leds_Splash 0318                         _brt_patt 0020                    __size_of_main 0048  
          _Rx_RightLED_StateNoti 0598                  ??_DispFlowLight 0051                         int$flags 007E  
                    ??_make_data 0049          __size_of_make_flow_patt 0096               _Bike_ButtonProcess 04CA  
            ?_Bike_ButtonProcess 0070                         intlevel1 0000                __CFG_CLKOUTEN$OFF 0000  
                   ??_output_spi 0073                       _OSCCONbits 0099           __size_of_make_fix_patt 0013  
           ??_Bike_ButtonProcess 0079                   _act_period_cnt 0038               __end_of_output_spi 0430  
     __size_of_APA102Leds_Splash 0061           ?_Rx_RightLED_StateNoti 0070  Bike_ButtonProcess@RxLED_40sNoti 0045  
